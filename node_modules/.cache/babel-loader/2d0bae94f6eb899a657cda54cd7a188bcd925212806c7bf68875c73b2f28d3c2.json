{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/tompi/Documents/Programmier\\xFCbungen/\\xDCbung JS/React-Projekte/quizapp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"C:/Users/tompi/Documents/Programmier\\xFCbungen/\\xDCbung JS/React-Projekte/quizapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Question from'./Question';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RandomQuizList=function RandomQuizList(_ref){var allQuestions=_ref.allQuestions,setState=_ref.setState,changeScore=_ref.changeScore,isMillionär=_ref.isMillionär;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];var checkAnswer=function checkAnswer(event){var answerPossibilities=document.getElementsByClassName(event.currentTarget.className);var _iterator=_createForOfIteratorHelper(answerPossibilities),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var answerPossibilitie=_step.value;if(answerPossibilitie.getAttribute(\"correct\")===\"yes\"){var correctAnswer=answerPossibilitie;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(event.currentTarget.getAttribute(\"correct\")===\"yes\"){event.currentTarget.style.backgroundColor=\"green\";event.currentTarget.style.color=\"white\";changeScore();}else{correctAnswer.className=correctAnswer.className+\" blinking\";event.currentTarget.style.backgroundColor=\"red\";event.currentTarget.style.color=\"white\";if(isMillionär){setState(\"score\");}}setTimeout(nextQuestion,2000);};var nextQuestion=function nextQuestion(){if(currentQuestion===allQuestions.length-1){setState(\"score\");}else{setCurrentQuestion(currentQuestion+1);}};return/*#__PURE__*/_jsxs(\"section\",{className:\"quizList\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Question \",/*#__PURE__*/_jsx(\"span\",{id:\"actualQuestionPosition\",children:currentQuestion<allQuestions.length?currentQuestion+1:currentQuestion}),\" of \",allQuestions.length,\" \"]}),allQuestions.map(function(item,index){if(index===currentQuestion){return/*#__PURE__*/_jsx(Question,{questionIndex:index,questionName:item.question,correctAnswer:item.correctAnswer,incorrectAnswers:item.incorrectAnswers,checkAnswer:checkAnswer,changeQuestion:nextQuestion},index);}else{return'';}})]});};export default RandomQuizList;","map":{"version":3,"names":["React","useState","Question","jsx","_jsx","jsxs","_jsxs","RandomQuizList","_ref","allQuestions","setState","changeScore","isMillionär","_useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","checkAnswer","event","answerPossibilities","document","getElementsByClassName","currentTarget","className","_iterator","_createForOfIteratorHelper","_step","s","n","done","answerPossibilitie","value","getAttribute","correctAnswer","err","e","f","style","backgroundColor","color","setTimeout","nextQuestion","length","children","id","map","item","index","questionIndex","questionName","question","incorrectAnswers","changeQuestion"],"sources":["C:/Users/tompi/Documents/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/RandomQuizList.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Question from './Question'\r\n\r\nconst RandomQuizList = ({ allQuestions, setState, changeScore, isMillionär }) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n    const checkAnswer = (event) => {\r\n        var answerPossibilities = document.getElementsByClassName(event.currentTarget.className);\r\n\r\n        for (var answerPossibilitie of answerPossibilities) {\r\n            if (answerPossibilitie.getAttribute(\"correct\") === \"yes\") {\r\n                var correctAnswer = answerPossibilitie;\r\n            }\r\n        }\r\n\r\n        if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\r\n\r\n            event.currentTarget.style.backgroundColor = \"green\";\r\n            event.currentTarget.style.color = \"white\";\r\n\r\n            changeScore();\r\n\r\n        } else {\r\n            correctAnswer.className = correctAnswer.className + \" blinking\"\r\n\r\n            event.currentTarget.style.backgroundColor = \"red\";\r\n            event.currentTarget.style.color = \"white\";\r\n\r\n            if(isMillionär){\r\n                setState(\"score\");\r\n            }\r\n\r\n        }\r\n\r\n        setTimeout(nextQuestion, 2000);\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestion === allQuestions.length - 1) {\r\n            setState(\"score\");\r\n        } else {\r\n            setCurrentQuestion(currentQuestion + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className='quizList'>\r\n            <div>Question <span id=\"actualQuestionPosition\">{(currentQuestion < allQuestions.length) ? currentQuestion + 1 : currentQuestion}</span> of {allQuestions.length} </div>\r\n            {allQuestions.map((item, index) => {\r\n                if (index === currentQuestion) {\r\n                    return (\r\n                        <Question\r\n                            key={index}\r\n                            questionIndex={index}\r\n                            questionName={item.question}\r\n                            correctAnswer={item.correctAnswer}\r\n                            incorrectAnswers={item.incorrectAnswers}\r\n                            checkAnswer={checkAnswer}\r\n                            changeQuestion={nextQuestion}\r\n                        ></Question>\r\n                    )\r\n                } else {\r\n                    return ('');\r\n                }\r\n            })}\r\n        </section>\r\n    )\r\n}\r\nexport default RandomQuizList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}