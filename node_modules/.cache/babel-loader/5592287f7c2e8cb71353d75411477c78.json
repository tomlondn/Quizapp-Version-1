{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React\\xDCbung\\\\quizapp\\\\src\\\\components\\\\RandomQuizList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomQuizList = _ref => {\n  _s();\n\n  let {\n    allQuestions,\n    setState,\n    changeScore\n  } = _ref;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const checkAnswer = event => {\n    var allPossibilities = document.getElementsByClassName(event.currentTarget.className);\n\n    for (var possibilitie of allPossibilities) {\n      possibilitie.setAttribute(\"disable\", true);\n    }\n\n    event.currentTarget.setAttribute(\"disable\", false);\n    console.log(event.currentTarget.getAttribute(\"disable\"));\n\n    if (!document.getElementsByClassName(event.currentTarget.disable)) {\n      if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\n        event.currentTarget.style.backgroundColor = \"green\";\n        event.currentTarget.style.color = \"white\";\n        changeScore();\n      } else {\n        event.currentTarget.style.backgroundColor = \"red\";\n        event.currentTarget.style.color = \"white\";\n      }\n    }\n  };\n\n  const nextQuestion = () => {\n    if (currentQuestion === allQuestions.length - 1) {\n      setState(\"score\");\n    } else {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"quizList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"actualQuestionPosition\",\n        children: currentQuestion < allQuestions.length ? currentQuestion + 1 : currentQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this), \" of \", allQuestions.length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), allQuestions.map((item, index) => {\n      if (index === currentQuestion) {\n        return /*#__PURE__*/_jsxDEV(Question, {\n          questionIndex: index,\n          questionName: item.question,\n          correctAnswer: item.correctAnswer,\n          incorrectAnswers: item.incorrectAnswers,\n          checkAnswer: checkAnswer,\n          changeQuestion: nextQuestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RandomQuizList, \"9OM438k1WhEIHDwFF7YsuyU6VEk=\");\n\n_c = RandomQuizList;\nexport default RandomQuizList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomQuizList\");","map":{"version":3,"names":["React","Question","useState","RandomQuizList","allQuestions","setState","changeScore","currentQuestion","setCurrentQuestion","checkAnswer","event","allPossibilities","document","getElementsByClassName","currentTarget","className","possibilitie","setAttribute","console","log","getAttribute","disable","style","backgroundColor","color","nextQuestion","length","map","item","index","question","correctAnswer","incorrectAnswers"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/ReactÜbung/quizapp/src/components/RandomQuizList.js"],"sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\nimport { useState } from 'react'\r\n\r\nconst RandomQuizList = ({ allQuestions, setState, changeScore }) => {\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n\r\n    const checkAnswer = (event) => {\r\n        var allPossibilities = document.getElementsByClassName(event.currentTarget.className);\r\n        \r\n        for (var possibilitie of allPossibilities) {\r\n            possibilitie.setAttribute(\"disable\", true);\r\n        }\r\n        event.currentTarget.setAttribute(\"disable\", false);\r\n\r\n\r\n        console.log(event.currentTarget.getAttribute(\"disable\"));\r\n\r\n        \r\n        if (!(document.getElementsByClassName(event.currentTarget.disable))) {\r\n\r\n            if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\r\n\r\n                event.currentTarget.style.backgroundColor = \"green\";\r\n                event.currentTarget.style.color = \"white\";\r\n\r\n                changeScore();\r\n              \r\n            } else {\r\n                event.currentTarget.style.backgroundColor = \"red\";\r\n                event.currentTarget.style.color = \"white\";\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestion === allQuestions.length - 1) {\r\n            setState(\"score\");\r\n        } else {\r\n            setCurrentQuestion(currentQuestion + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className='quizList'>\r\n            <div>Question <span id=\"actualQuestionPosition\">{(currentQuestion < allQuestions.length) ? currentQuestion + 1 : currentQuestion}</span> of {allQuestions.length} </div>\r\n            {allQuestions.map((item, index) => {\r\n                if (index === currentQuestion) {\r\n                    return (\r\n                        <Question\r\n                            key={index}\r\n                            questionIndex={index}\r\n                            questionName={item.question}\r\n                            correctAnswer={item.correctAnswer}\r\n                            incorrectAnswers={item.incorrectAnswers}\r\n                            checkAnswer={checkAnswer}\r\n                            changeQuestion={nextQuestion}\r\n                        ></Question>\r\n                    )\r\n                }\r\n            })}\r\n        </section>\r\n    )\r\n}\r\nexport default RandomQuizList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAG,QAA6C;EAAA;;EAAA,IAA5C;IAAEC,YAAF;IAAgBC,QAAhB;IAA0BC;EAA1B,CAA4C;EAEhE,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,CAAD,CAAtD;;EAGA,MAAMO,WAAW,GAAIC,KAAD,IAAW;IAC3B,IAAIC,gBAAgB,GAAGC,QAAQ,CAACC,sBAAT,CAAgCH,KAAK,CAACI,aAAN,CAAoBC,SAApD,CAAvB;;IAEA,KAAK,IAAIC,YAAT,IAAyBL,gBAAzB,EAA2C;MACvCK,YAAY,CAACC,YAAb,CAA0B,SAA1B,EAAqC,IAArC;IACH;;IACDP,KAAK,CAACI,aAAN,CAAoBG,YAApB,CAAiC,SAAjC,EAA4C,KAA5C;IAGAC,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACI,aAAN,CAAoBM,YAApB,CAAiC,SAAjC,CAAZ;;IAGA,IAAI,CAAER,QAAQ,CAACC,sBAAT,CAAgCH,KAAK,CAACI,aAAN,CAAoBO,OAApD,CAAN,EAAqE;MAEjE,IAAIX,KAAK,CAACI,aAAN,CAAoBM,YAApB,CAAiC,SAAjC,MAAgD,KAApD,EAA2D;QAEvDV,KAAK,CAACI,aAAN,CAAoBQ,KAApB,CAA0BC,eAA1B,GAA4C,OAA5C;QACAb,KAAK,CAACI,aAAN,CAAoBQ,KAApB,CAA0BE,KAA1B,GAAkC,OAAlC;QAEAlB,WAAW;MAEd,CAPD,MAOO;QACHI,KAAK,CAACI,aAAN,CAAoBQ,KAApB,CAA0BC,eAA1B,GAA4C,KAA5C;QACAb,KAAK,CAACI,aAAN,CAAoBQ,KAApB,CAA0BE,KAA1B,GAAkC,OAAlC;MACH;IAEJ;EACJ,CA3BD;;EA6BA,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIlB,eAAe,KAAKH,YAAY,CAACsB,MAAb,GAAsB,CAA9C,EAAiD;MAC7CrB,QAAQ,CAAC,OAAD,CAAR;IACH,CAFD,MAEO;MACHG,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;IACH;EACJ,CAND;;EAQA,oBACI;IAAS,SAAS,EAAC,UAAnB;IAAA,wBACI;MAAA,qCAAc;QAAM,EAAE,EAAC,wBAAT;QAAA,UAAoCA,eAAe,GAAGH,YAAY,CAACsB,MAAhC,GAA0CnB,eAAe,GAAG,CAA5D,GAAgEA;MAAnG;QAAA;QAAA;QAAA;MAAA,QAAd,UAA6IH,YAAY,CAACsB,MAA1J;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKtB,YAAY,CAACuB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC/B,IAAIA,KAAK,KAAKtB,eAAd,EAA+B;QAC3B,oBACI,QAAC,QAAD;UAEI,aAAa,EAAEsB,KAFnB;UAGI,YAAY,EAAED,IAAI,CAACE,QAHvB;UAII,aAAa,EAAEF,IAAI,CAACG,aAJxB;UAKI,gBAAgB,EAAEH,IAAI,CAACI,gBAL3B;UAMI,WAAW,EAAEvB,WANjB;UAOI,cAAc,EAAEgB;QAPpB,GACSI,KADT;UAAA;UAAA;UAAA;QAAA,QADJ;MAWH;IACJ,CAdA,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CA9DD;;GAAM1B,c;;KAAAA,c;AA+DN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}