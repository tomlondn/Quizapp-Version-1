{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React-Projekte\\\\quizapp\\\\src\\\\components\\\\Million\\xE4rQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserNameQuiz from './UserNameQuiz';\nimport RandomQuizList from './RandomQuizList';\nimport axios from \"axios\";\nimport { isFocusable } from \"@testing-library/user-event/dist/utils\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MillionärQuiz = () => {\n  _s();\n\n  const [quizState, setQuizState] = useState(\"name\");\n  const [allQuestions, setQuestions] = useState([]);\n  const [easyQuestions, setEasyQuestions] = useState([]);\n  const [mediumQuestions, setMediumQuestions] = useState([]);\n  const [hardQuestions, setHardQuestions] = useState([]);\n  var dasistmeintest = \"huan\";\n\n  const changeQuizState = state => {\n    setQuizState(state);\n  };\n\n  const setUserName = event => {\n    sessionStorage.setItem(\"UsernameMillionär\", event.currentTarget.value);\n  };\n\n  const getUrl = difficulty => {\n    var url = \"https://the-trivia-api.com/api/questions?difficulty=\" + difficulty + \"&limit=5\";\n    return url;\n  };\n\n  const setAllQuestionArr = () => {\n    let Questions = [];\n    var easy = [...easyQuestions];\n    var medium = [...mediumQuestions];\n    var hard = [...hardQuestions];\n    Questions.push(easy);\n    Questions.push(medium);\n    Questions.push(hard);\n    setQuestions(Questions);\n  };\n\n  const buildQuizQuestions = () => {\n    getQuestionsBlock(\"easy\", getUrl(\"easy\"));\n    getQuestionsBlock(\"medium\", getUrl(\"medium\"));\n    getQuestionsBlock(\"hard\", getUrl(\"hard\"));\n    setAllQuestionArr();\n  };\n\n  const getQuestionsBlock = async (difficulty, url) => {\n    const res = await axios.get(url);\n    console.log(res.data);\n\n    if (difficulty === \"easy\") {\n      setEasyQuestions(res.data);\n    } else if (difficulty === \"medium\") {\n      setMediumQuestions(res.data);\n    } else {\n      setHardQuestions(res.data);\n    }\n  };\n\n  const checkeNameSetState = event => {\n    event.preventDefault();\n    buildQuizQuestions();\n\n    if (sessionStorage.getItem(\"UsernameMillionär\")) {\n      changeQuizState(\"startet\");\n    } else {\n      alert(\"Bitte einen Namen eingeben!\");\n    }\n  };\n\n  const changeQuizScore = () => {\n    sessionStorage.setItem(\"Score\", parseInt(sessionStorage.getItem(\"Score\")) + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"million\\xE4rQuiz\",\n    children: quizState === \"name\" ? (sessionStorage.clear(), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Starte dein Quiz nach \\\"Wer Wird Million\\xE4r\\\" Art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"15 Fragen - 5 Leichte - 5 Mittlere - 5 Schwere\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 62\n        }, this), \"Ein Fehler und das Quiz ist vorbei - 2 50/50 Joker\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UserNameQuiz, {\n        setName: setUserName,\n        setStateCheckName: checkeNameSetState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)) : quizState === \"startet\" ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quizStarted\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(RandomQuizList, {\n        test: dasistmeintest,\n        allQuestions: allQuestions,\n        setState: changeQuizState,\n        changeScore: changeQuizScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MillionärQuiz, \"uGtGi0M1sMrNGTmrliVMc3uRsaM=\");\n\n_c = MillionärQuiz;\nexport default MillionärQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Million\\xE4rQuiz\");","map":{"version":3,"names":["React","useEffect","useState","UserNameQuiz","RandomQuizList","axios","isFocusable","Question","MillionärQuiz","quizState","setQuizState","allQuestions","setQuestions","easyQuestions","setEasyQuestions","mediumQuestions","setMediumQuestions","hardQuestions","setHardQuestions","dasistmeintest","changeQuizState","state","setUserName","event","sessionStorage","setItem","currentTarget","value","getUrl","difficulty","url","setAllQuestionArr","Questions","easy","medium","hard","push","buildQuizQuestions","getQuestionsBlock","res","get","console","log","data","checkeNameSetState","preventDefault","getItem","alert","changeQuizScore","parseInt","clear"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/MillionärQuiz.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UserNameQuiz from './UserNameQuiz';\r\nimport RandomQuizList from './RandomQuizList';\r\nimport axios from \"axios\";\r\nimport { isFocusable } from \"@testing-library/user-event/dist/utils\";\r\nimport Question from \"./Question\";\r\n\r\nconst MillionärQuiz = () => {\r\n\r\n  const [quizState, setQuizState] = useState(\"name\");\r\n  const [allQuestions, setQuestions] = useState([]);\r\n  const [easyQuestions, setEasyQuestions] = useState([]);\r\n  const [mediumQuestions, setMediumQuestions] = useState([]);\r\n  const [hardQuestions, setHardQuestions] = useState([]);\r\n\r\n\r\n\r\n  var dasistmeintest = \"huan\";\r\n\r\n  const changeQuizState = (state) => {\r\n    setQuizState(state);\r\n  }\r\n\r\n  const setUserName = (event) => {\r\n    sessionStorage.setItem(\"UsernameMillionär\", event.currentTarget.value)\r\n  }\r\n\r\n  const getUrl = (difficulty) => {\r\n    var url = \"https://the-trivia-api.com/api/questions?difficulty=\" + difficulty + \"&limit=5\";\r\n    return url\r\n  }\r\n\r\n  const setAllQuestionArr = () => {\r\n    let Questions = [];\r\n\r\n    var easy = [...easyQuestions];\r\n    var medium = [...mediumQuestions];\r\n    var hard = [...hardQuestions];\r\n\r\n    Questions.push(easy);\r\n    Questions.push(medium);\r\n    Questions.push(hard);\r\n    \r\n    setQuestions(Questions);\r\n  }\r\n\r\n  const buildQuizQuestions = () => {\r\n\r\n    getQuestionsBlock(\"easy\", getUrl(\"easy\"));\r\n    getQuestionsBlock(\"medium\", getUrl(\"medium\"));\r\n    getQuestionsBlock(\"hard\", getUrl(\"hard\"));\r\n\r\n    setAllQuestionArr();\r\n\r\n  }\r\n\r\n  const getQuestionsBlock = async (difficulty, url) => {\r\n    const res = await axios.get(url);\r\n\r\n    console.log(res.data)\r\n\r\n    if (difficulty === \"easy\") {\r\n      setEasyQuestions(res.data)\r\n    } else if (difficulty === \"medium\") {\r\n      setMediumQuestions(res.data)\r\n    } else {\r\n      setHardQuestions(res.data)\r\n    }\r\n\r\n  }\r\n\r\n  const checkeNameSetState = (event) => {\r\n    event.preventDefault();\r\n    buildQuizQuestions();\r\n\r\n    if (sessionStorage.getItem(\"UsernameMillionär\")) {\r\n      changeQuizState(\"startet\");\r\n\r\n    } else {\r\n      alert(\"Bitte einen Namen eingeben!\");\r\n    }\r\n  }\r\n\r\n  const changeQuizScore = () => {\r\n    sessionStorage.setItem(\"Score\", parseInt(sessionStorage.getItem(\"Score\")) + 1);\r\n  }\r\n\r\n  return (\r\n    <section className=\"millionärQuiz\">\r\n\r\n      {quizState === \"name\" ?\r\n        (\r\n          sessionStorage.clear(),\r\n          <section>\r\n            <header>\r\n              <h1>Starte dein Quiz nach \"Wer Wird Millionär\" Art</h1>\r\n            </header>\r\n            <p>15 Fragen - 5 Leichte - 5 Mittlere - 5 Schwere<br />\r\n              Ein Fehler und das Quiz ist vorbei - 2 50/50 Joker\r\n            </p>\r\n\r\n            <UserNameQuiz\r\n              setName={setUserName}\r\n              setStateCheckName={checkeNameSetState}\r\n            ></UserNameQuiz>\r\n          </section>\r\n        ) : quizState === \"startet\" ?\r\n          (\r\n\r\n            <section className=\"quizStarted\">\r\n              <header>\r\n                <h1>Quiz</h1>\r\n              </header>\r\n\r\n              <RandomQuizList\r\n                test={dasistmeintest}\r\n                allQuestions={allQuestions}\r\n                setState={changeQuizState}\r\n                changeScore={changeQuizScore}\r\n              ></RandomQuizList>\r\n            </section>\r\n\r\n          ) : ''\r\n      }\r\n    </section>\r\n  )\r\n}\r\nexport default MillionärQuiz"],"mappings":"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"},"metadata":{},"sourceType":"module"}