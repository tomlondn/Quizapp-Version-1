{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tompi/Documents/Programmier\\xFCbungen/\\xDCbung JS/React-Projekte/quizapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/tompi/Documents/Programmier\\xFCbungen/\\xDCbung JS/React-Projekte/quizapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"C:/Users/tompi/Documents/Programmier\\xFCbungen/\\xDCbung JS/React-Projekte/quizapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/tompi/Documents/Programmier\\xFCbungen/\\xDCbung JS/React-Projekte/quizapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/tompi/Documents/Programmier\\xFCbungen/\\xDCbung JS/React-Projekte/quizapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import QuestionCategorys from'./QuestionCategorys';import QuestionDifficultys from'./QuestionDifficultys';import axios from\"axios\";import QuestionCount from\"./QuestionCount\";import RandomQuizList from\"./RandomQuizList\";import UserNameQuiz from\"./UserNameQuiz\";import QuizScore from\"./QuizScore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RandomQuizGenerator=function RandomQuizGenerator(){var catApiurl=\"https://the-trivia-api.com/api/categories\";var allDifficultys=[{active:null,difficulty:'Easy'},{active:null,difficulty:'Medium'},{active:null,difficulty:'Hard'}];var baseQuizConfig={difficulty:null,categorie:null,count:null};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),categories=_useState2[0],setCategories=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(allDifficultys),_useState6=_slicedToArray(_useState5,2),difficultys=_useState6[0],setDifficulty=_useState6[1];var _useState7=useState(baseQuizConfig),_useState8=_slicedToArray(_useState7,2),quizConfig=_useState8[0],setQuizConfig=_useState8[1];var _useState9=useState(\"name\"),_useState10=_slicedToArray(_useState9,2),quizState=_useState10[0],setQuizState=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),questions=_useState12[0],setQuestions=_useState12[1];var getCategorieArrayObjext=function getCategorieArrayObjext(cats){var newCatOby=[];cats.forEach(function(item){newCatOby.push({active:null,categorie:item});});return newCatOby;};var formatCat=function formatCat(cat){cat=cat.replaceAll(\" \",\"_\");cat=cat.replace(\"&\",\"and\");console.log(cat);return cat;};var getCategory=function getCategory(index){var quizCategorys=_toConsumableArray(categories);console.log(quizCategorys);var newQuizConfig=_objectSpread({},quizConfig);quizCategorys.forEach(function(item){item.active=false;});quizCategorys[index].active=true;setCategories(quizCategorys);newQuizConfig.categorie=quizCategorys[index].categorie;setQuizConfig(newQuizConfig);};var getDifficulty=function getDifficulty(index){var quizDifficultys=_toConsumableArray(difficultys);var newQuizConfig=_objectSpread({},quizConfig);quizDifficultys.forEach(function(item){item.active=false;});quizDifficultys[index].active=true;setDifficulty(quizDifficultys);newQuizConfig.difficulty=quizDifficultys[index].difficulty;setQuizConfig(newQuizConfig);};var getQuestionCount=function getQuestionCount(event){var count=event.currentTarget.value;var min=event.currentTarget.min;var max=event.currentTarget.max;var newQuizConfig=_objectSpread({},quizConfig);if(count>=min&&count<=max){newQuizConfig.count=count;}else{newQuizConfig.count=null;}setQuizConfig(newQuizConfig);};var getQuizConfig=function getQuizConfig(event){event.preventDefault();if(quizConfig.categorie===null){alert(\"Bitte Kategorie auswählen\");}else if(quizConfig.difficulty===null){alert(\"Bitte Schwierigkeit auswählen\");}else if(!quizConfig.count){alert(\"Bitte (gültige)Fragemenge eingeben\");}if(quizConfig.categorie!=null&!!quizConfig.count&quizConfig.difficulty!=null){var newApiUrl=\"https://the-trivia-api.com/api/questions?categories=\"+formatCat(quizConfig.categorie).toLowerCase()+\"&limit=\"+quizConfig.count+\"&difficulty=\"+quizConfig.difficulty.toLowerCase();setQuizState(\"startet\");getQuestions(newApiUrl);}};var checkeNameSetState=function checkeNameSetState(event){event.preventDefault();if(sessionStorage.getItem(\"Username\")){changeQuizState(\"config\");}else{alert(\"Bitte einen Namen eingeben!\");}};var setUserName=function setUserName(event){sessionStorage.setItem(\"Username\",event.currentTarget.value);};var changeQuizScore=function changeQuizScore(){sessionStorage.setItem(\"Score\",parseInt(sessionStorage.getItem(\"Score\"))+1);};var changeQuizState=function changeQuizState(state){setQuizState(state);};var getQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(url);case 2:res=_context.sent;setQuestions(res.data);case 4:case\"end\":return _context.stop();}},_callee);}));return function getQuestions(_x){return _ref.apply(this,arguments);};}();useEffect(function(){var getCartgories=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(catApiurl);case 2:res=_context2.sent;setCategories(getCategorieArrayObjext(Object.keys(res.data)));setLoading(false);case 5:case\"end\":return _context2.stop();}},_callee2);}));return function getCartgories(){return _ref2.apply(this,arguments);};}();getCartgories();},[]);return/*#__PURE__*/_jsx(\"section\",{children:loading?/*#__PURE__*/_jsx(\"h4\",{children:\"Wait for Api...\"}):quizState===\"name\"?(sessionStorage.clear(),/*#__PURE__*/_jsxs(\"section\",{className:\"takeName\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\" Erstelle dein Random Quiz Schritt 1 von 2\"})}),/*#__PURE__*/_jsx(UserNameQuiz,{setName:setUserName,setStateCheckName:checkeNameSetState})]})):quizState===\"config\"?/*#__PURE__*/_jsxs(\"section\",{className:\"quizConfig\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\" Erstelle dein Random Quiz Schritt 2 von 2\"})}),/*#__PURE__*/_jsx(QuestionCategorys,{setCategorie:getCategory,categories:categories}),/*#__PURE__*/_jsx(QuestionDifficultys,{setDifficulty:getDifficulty,difficultys:difficultys}),/*#__PURE__*/_jsx(QuestionCount,{setCount:getQuestionCount,startQuiz:getQuizConfig})]}):quizState===\"startet\"?(sessionStorage.setItem(\"Score\",0),/*#__PURE__*/_jsxs(\"section\",{className:\"quizStartet\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Quiz\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Schwierigkeit: \",quizConfig.difficulty,\" \"]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Kategorie: \",quizConfig.categorie]})]}),/*#__PURE__*/_jsx(RandomQuizList,{allQuestions:questions,setState:changeQuizState,changeScore:changeQuizScore}),/*#__PURE__*/_jsx(\"p\",{onClick:function onClick(){return setQuizState(\"config\");},className:\" button\",children:\"Zur\\xFCck zur Quiz-Konfig\"})]})):/*#__PURE__*/_jsx(QuizScore,{quizConfig:quizConfig,setQuizState:setQuizState})});};export default RandomQuizGenerator;","map":{"version":3,"names":["React","useEffect","useState","QuestionCategorys","QuestionDifficultys","axios","QuestionCount","RandomQuizList","UserNameQuiz","QuizScore","jsx","_jsx","jsxs","_jsxs","RandomQuizGenerator","catApiurl","allDifficultys","active","difficulty","baseQuizConfig","categorie","count","_useState","_useState2","_slicedToArray","categories","setCategories","_useState3","_useState4","loading","setLoading","_useState5","_useState6","difficultys","setDifficulty","_useState7","_useState8","quizConfig","setQuizConfig","_useState9","_useState10","quizState","setQuizState","_useState11","_useState12","questions","setQuestions","getCategorieArrayObjext","cats","newCatOby","forEach","item","push","formatCat","cat","replaceAll","replace","console","log","getCategory","index","quizCategorys","_toConsumableArray","newQuizConfig","_objectSpread","getDifficulty","quizDifficultys","getQuestionCount","event","currentTarget","value","min","max","getQuizConfig","preventDefault","alert","newApiUrl","toLowerCase","getQuestions","checkeNameSetState","sessionStorage","getItem","changeQuizState","setUserName","setItem","changeQuizScore","parseInt","state","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","res","wrap","_callee$","_context","prev","next","get","sent","data","stop","_x","apply","arguments","getCartgories","_ref2","_callee2","_callee2$","_context2","Object","keys","children","clear","className","setName","setStateCheckName","setCategorie","setCount","startQuiz","allQuestions","setState","changeScore","onClick"],"sources":["C:/Users/tompi/Documents/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/RandomQuizGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport QuestionCategorys from './QuestionCategorys'\r\nimport QuestionDifficultys from './QuestionDifficultys'\r\nimport axios from \"axios\";\r\nimport QuestionCount from \"./QuestionCount\";\r\nimport RandomQuizList from \"./RandomQuizList\";\r\nimport UserNameQuiz from \"./UserNameQuiz\";\r\nimport QuizScore from \"./QuizScore\";\r\n\r\n\r\nconst RandomQuizGenerator = () => {\r\n  const catApiurl = \"https://the-trivia-api.com/api/categories\";\r\n  const allDifficultys = [\r\n    { active: null, difficulty: 'Easy' },\r\n    { active: null, difficulty: 'Medium' },\r\n    { active: null, difficulty: 'Hard' }\r\n  ];\r\n\r\n  const baseQuizConfig = {\r\n    difficulty: null,\r\n    categorie: null,\r\n    count: null\r\n  };\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [difficultys, setDifficulty] = useState(allDifficultys);\r\n  const [quizConfig, setQuizConfig] = useState(baseQuizConfig);\r\n  const [quizState, setQuizState] = useState(\"name\");\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const getCategorieArrayObjext = (cats) => {\r\n    let newCatOby = [];\r\n\r\n    cats.forEach(item => {\r\n      newCatOby.push({ active: null, categorie: item })\r\n    })\r\n    return newCatOby;\r\n  }\r\n  const formatCat = (cat) => {\r\n    cat = cat.replaceAll(\" \", \"_\");\r\n    cat = cat.replace(\"&\", \"and\");\r\n    console.log(cat);\r\n\r\n    return cat;\r\n  }\r\n  const getCategory = (index) => {\r\n    let quizCategorys = [...categories];\r\n    console.log(quizCategorys);\r\n    let newQuizConfig = { ...quizConfig };\r\n\r\n    quizCategorys.forEach(item => {\r\n      item.active = false;\r\n    })\r\n    quizCategorys[index].active = true;\r\n\r\n    setCategories(quizCategorys);\r\n\r\n    newQuizConfig.categorie = quizCategorys[index].categorie;\r\n\r\n    setQuizConfig(newQuizConfig);\r\n\r\n  }\r\n  const getDifficulty = (index) => {\r\n    let quizDifficultys = [...difficultys];\r\n    let newQuizConfig = { ...quizConfig };\r\n\r\n    quizDifficultys.forEach(item => {\r\n      item.active = false;\r\n    })\r\n    quizDifficultys[index].active = true;\r\n\r\n    setDifficulty(quizDifficultys);\r\n\r\n    newQuizConfig.difficulty = quizDifficultys[index].difficulty;\r\n    setQuizConfig(newQuizConfig);\r\n\r\n  }\r\n  const getQuestionCount = (event) => {\r\n    var count = event.currentTarget.value;\r\n    var min = event.currentTarget.min;\r\n    var max = event.currentTarget.max;\r\n    let newQuizConfig = { ...quizConfig };\r\n\r\n    if ((count >= min) && (count <= max)) {\r\n      newQuizConfig.count = count;\r\n    } else {\r\n      newQuizConfig.count = null;\r\n    }\r\n    setQuizConfig(newQuizConfig);\r\n  }\r\n\r\n  const getQuizConfig = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (quizConfig.categorie === null) {\r\n      alert(\"Bitte Kategorie auswählen\");\r\n    } else if (quizConfig.difficulty === null) {\r\n      alert(\"Bitte Schwierigkeit auswählen\");\r\n    } else if (!quizConfig.count) {\r\n      alert(\"Bitte (gültige)Fragemenge eingeben\");\r\n    }\r\n\r\n    if (quizConfig.categorie != null & !!quizConfig.count & quizConfig.difficulty != null) {\r\n\r\n      var newApiUrl = \"https://the-trivia-api.com/api/questions?categories=\" +\r\n        formatCat(quizConfig.categorie).toLowerCase() + \"&limit=\" + quizConfig.count + \"&difficulty=\" + quizConfig.difficulty.toLowerCase();\r\n\r\n      setQuizState(\"startet\");\r\n\r\n      getQuestions(newApiUrl)\r\n    }\r\n  }\r\n\r\n  const checkeNameSetState = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sessionStorage.getItem(\"Username\")) {\r\n      changeQuizState(\"config\");\r\n\r\n    } else {\r\n      alert(\"Bitte einen Namen eingeben!\");\r\n    }\r\n  }\r\n\r\n  const setUserName = (event) => {\r\n    sessionStorage.setItem(\"Username\", event.currentTarget.value)\r\n  }\r\n\r\n  const changeQuizScore = () => {\r\n    sessionStorage.setItem(\"Score\", parseInt(sessionStorage.getItem(\"Score\")) + 1);\r\n  }\r\n\r\n  const changeQuizState = (state) => {\r\n    setQuizState(state);\r\n  }\r\n\r\n  const getQuestions = async (url) => {\r\n    const res = await axios.get(url);\r\n    setQuestions(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCartgories = async () => {\r\n      const res = await axios.get(catApiurl);\r\n      setCategories(getCategorieArrayObjext(Object.keys(res.data)));\r\n      setLoading(false);\r\n    };\r\n\r\n    getCartgories();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      {loading ? (\r\n        <h4>Wait for Api...</h4>) :\r\n        quizState === \"name\" ?\r\n          (\r\n            sessionStorage.clear(),\r\n            <section className=\"takeName\">\r\n              <header>\r\n                <h1> Erstelle dein Random Quiz Schritt 1 von 2</h1>\r\n              </header>\r\n              <UserNameQuiz\r\n                setName={setUserName}\r\n                setStateCheckName={checkeNameSetState}\r\n              ></UserNameQuiz>\r\n\r\n            </section>\r\n\r\n          ) : quizState === \"config\" ? (\r\n\r\n            <section className=\"quizConfig\">\r\n              <header>\r\n                <h1> Erstelle dein Random Quiz Schritt 2 von 2</h1>\r\n              </header>\r\n\r\n              <QuestionCategorys\r\n                setCategorie={getCategory}\r\n                categories={categories}\r\n              ></QuestionCategorys>\r\n\r\n              <QuestionDifficultys\r\n                setDifficulty={getDifficulty}\r\n                difficultys={difficultys}\r\n              ></QuestionDifficultys>\r\n\r\n              <QuestionCount\r\n                setCount={getQuestionCount}\r\n                startQuiz={getQuizConfig}\r\n              ></QuestionCount>\r\n            </section>\r\n\r\n          ) : quizState === \"startet\" ? (\r\n\r\n            sessionStorage.setItem(\"Score\", 0),\r\n\r\n            <section className=\"quizStartet\">\r\n              <header>\r\n                <h1>Quiz</h1>\r\n                <h2>Schwierigkeit: {quizConfig.difficulty} </h2>\r\n                <h2>Kategorie: {quizConfig.categorie}</h2>\r\n              </header>\r\n\r\n              <RandomQuizList\r\n                allQuestions={questions}\r\n                setState={changeQuizState}\r\n                changeScore={changeQuizScore}\r\n              ></RandomQuizList>\r\n\r\n              <p onClick={() => setQuizState(\"config\")} className=' button'>Zurück zur Quiz-Konfig</p>\r\n            </section>\r\n\r\n          ) : (\r\n            <QuizScore\r\n              quizConfig={quizConfig}\r\n              setQuizState={setQuizState}\r\n            ></QuizScore>\r\n          )\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default RandomQuizGenerator"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}