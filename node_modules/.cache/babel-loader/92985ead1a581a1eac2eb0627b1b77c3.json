{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React-Projekte\\\\quizapp\\\\src\\\\components\\\\CountryQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport InputField from './InputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountryQuiz = () => {\n  _s();\n\n  const apiUrl = \"https://restcountries.com/v3.1/all\";\n  const [quizState, setQuizState] = useState(\"generate\");\n  const [countryToGuess, setCountry] = useState({});\n\n  const callApi = async () => {\n    const res = await axios.get(apiUrl);\n    formatApiCountryData(res.data);\n  };\n\n  const formatApiCountryData = apiData => {\n    let filteredData = {};\n    apiData.forEach(item => {\n      var _item$capital, _item$continents;\n\n      filteredData[item.translations.deu.common] = {\n        \"population\": item.population,\n        \"capital\": (_item$capital = item.capital) === null || _item$capital === void 0 ? void 0 : _item$capital[0],\n        \"continent\": (_item$continents = item.continents) === null || _item$continents === void 0 ? void 0 : _item$continents[0],\n        \"area\": item.area\n      };\n    });\n    var keys = Object.keys(filteredData);\n    setCountry(filteredData[keys[keys.length * Math.random() << 0]]);\n  };\n\n  const checkCountry = e => {\n    e.preventDefault();\n  };\n\n  const startQuiz = e => {\n    e.preventDefault();\n    callApi();\n    setQuizState(\"guess\");\n  };\n\n  return console.log(countryToGuess), /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"countryQuiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Land in 5 versuchen erraten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), quizState === \"generate\" ? /*#__PURE__*/_jsxDEV(InputField, {\n      action: startQuiz,\n      inputLabel: \"\",\n      buttonLabel: \"Generieren\",\n      button: true,\n      input: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(InputField, {\n      action: checkCountry,\n      inputLabel: \"Land eingeben:\",\n      placeholder: \"Enter drücken zur Tippabgabe\",\n      button: false,\n      input: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountryQuiz, \"T3C4RarwPaDxoGZiHcMIWUXXY+M=\");\n\n_c = CountryQuiz;\nexport default CountryQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryQuiz\");","map":{"version":3,"names":["React","useEffect","useState","axios","InputField","CountryQuiz","apiUrl","quizState","setQuizState","countryToGuess","setCountry","callApi","res","get","formatApiCountryData","data","apiData","filteredData","forEach","item","translations","deu","common","population","capital","continents","area","keys","Object","length","Math","random","checkCountry","e","preventDefault","startQuiz","console","log"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/CountryQuiz.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport InputField from './InputField';\r\n\r\nconst CountryQuiz = () => {\r\n    const apiUrl = \"https://restcountries.com/v3.1/all\";\r\n    const [quizState, setQuizState] = useState(\"generate\");\r\n    const [countryToGuess, setCountry] = useState({});\r\n\r\n\r\n    const callApi = async () => {\r\n        const res = await axios.get(apiUrl);\r\n        formatApiCountryData(res.data);\r\n    }\r\n    const formatApiCountryData = (apiData) => {\r\n        let filteredData = {};\r\n        apiData.forEach((item) => {\r\n            filteredData[item.translations.deu.common] = {\r\n                \"population\": item.population,\r\n                \"capital\": item.capital?.[0],\r\n                \"continent\": item.continents?.[0],\r\n                \"area\": item.area\r\n            }\r\n        })\r\n\r\n        var keys = Object.keys(filteredData);\r\n        setCountry(filteredData[keys[keys.length * Math.random() << 0]]);\r\n    }\r\n    const checkCountry = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n    const startQuiz = (e) => {\r\n        e.preventDefault();\r\n        callApi();\r\n        setQuizState(\"guess\");\r\n    }\r\n\r\n    return (\r\n        console.log(countryToGuess),\r\n        <section className=\"countryQuiz\">\r\n            <header>\r\n                <h1>Land in 5 versuchen erraten</h1>\r\n            </header>\r\n            {quizState === \"generate\" ?\r\n                (\r\n                    <InputField\r\n                        action={startQuiz}\r\n                        inputLabel={\"\"}\r\n                        buttonLabel={\"Generieren\"}\r\n                        button={true}\r\n                        input={false}\r\n\r\n                    ></InputField>\r\n                )\r\n\r\n                : (\r\n                    <InputField\r\n                        action={checkCountry}\r\n                        inputLabel={\"Land eingeben:\"}\r\n                        placeholder={\"Enter drücken zur Tippabgabe\"}\r\n                        button={false}\r\n                        input={true}\r\n                    ></InputField>\r\n                )\r\n            }\r\n\r\n        </section>\r\n    )\r\n}\r\nexport default CountryQuiz;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAMC,MAAM,GAAG,oCAAf;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,UAAD,CAA1C;EACA,MAAM,CAACO,cAAD,EAAiBC,UAAjB,IAA+BR,QAAQ,CAAC,EAAD,CAA7C;;EAGA,MAAMS,OAAO,GAAG,YAAY;IACxB,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUP,MAAV,CAAlB;IACAQ,oBAAoB,CAACF,GAAG,CAACG,IAAL,CAApB;EACH,CAHD;;EAIA,MAAMD,oBAAoB,GAAIE,OAAD,IAAa;IACtC,IAAIC,YAAY,GAAG,EAAnB;IACAD,OAAO,CAACE,OAAR,CAAiBC,IAAD,IAAU;MAAA;;MACtBF,YAAY,CAACE,IAAI,CAACC,YAAL,CAAkBC,GAAlB,CAAsBC,MAAvB,CAAZ,GAA6C;QACzC,cAAcH,IAAI,CAACI,UADsB;QAEzC,4BAAWJ,IAAI,CAACK,OAAhB,kDAAW,cAAe,CAAf,CAF8B;QAGzC,iCAAaL,IAAI,CAACM,UAAlB,qDAAa,iBAAkB,CAAlB,CAH4B;QAIzC,QAAQN,IAAI,CAACO;MAJ4B,CAA7C;IAMH,CAPD;IASA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYV,YAAZ,CAAX;IACAP,UAAU,CAACO,YAAY,CAACU,IAAI,CAACA,IAAI,CAACE,MAAL,GAAcC,IAAI,CAACC,MAAL,EAAd,IAA+B,CAAhC,CAAL,CAAb,CAAV;EACH,CAbD;;EAcA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;EAEH,CAHD;;EAIA,MAAMC,SAAS,GAAIF,CAAD,IAAO;IACrBA,CAAC,CAACC,cAAF;IACAvB,OAAO;IACPH,YAAY,CAAC,OAAD,CAAZ;EACH,CAJD;;EAMA,OACI4B,OAAO,CAACC,GAAR,CAAY5B,cAAZ,gBACA;IAAS,SAAS,EAAC,aAAnB;IAAA,wBACI;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,EAIKF,SAAS,KAAK,UAAd,gBAEO,QAAC,UAAD;MACI,MAAM,EAAE4B,SADZ;MAEI,UAAU,EAAE,EAFhB;MAGI,WAAW,EAAE,YAHjB;MAII,MAAM,EAAE,IAJZ;MAKI,KAAK,EAAE;IALX;MAAA;MAAA;MAAA;IAAA,QAFP,gBAaO,QAAC,UAAD;MACI,MAAM,EAAEH,YADZ;MAEI,UAAU,EAAE,gBAFhB;MAGI,WAAW,EAAE,8BAHjB;MAII,MAAM,EAAE,KAJZ;MAKI,KAAK,EAAE;IALX;MAAA;MAAA;MAAA;IAAA,QAjBZ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AA+BH,CAjED;;GAAM3B,W;;KAAAA,W;AAkEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}