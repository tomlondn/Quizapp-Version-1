{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React-Projekte\\\\quizapp\\\\src\\\\components\\\\RandomQuizGenerator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport QuestionCategorys from './QuestionCategorys';\nimport QuestionDifficultys from './QuestionDifficultys';\nimport axios from \"axios\";\nimport QuestionCount from \"./QuestionCount\";\nimport RandomQuizList from \"./RandomQuizList\";\nimport UserNameQuiz from \"./UserNameQuiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomQuizGenerator = () => {\n  _s();\n\n  const catApiurl = \"https://the-trivia-api.com/api/categories\";\n  const allDifficultys = [{\n    active: null,\n    difficulty: 'Easy'\n  }, {\n    active: null,\n    difficulty: 'Medium'\n  }, {\n    active: null,\n    difficulty: 'Hard'\n  }];\n  const baseQuizConfig = {\n    difficulty: null,\n    categorie: null,\n    count: null\n  };\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [difficultys, setDifficulty] = useState(allDifficultys);\n  const [quizConfig, setQuizConfig] = useState(baseQuizConfig);\n  const [quizState, setQuizState] = useState(\"name\");\n  const [questionLoading, setQuestionLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n\n  const getCategorieArrayObjext = cats => {\n    let newCatOby = [];\n    cats.forEach(item => {\n      newCatOby.push({\n        active: null,\n        categorie: item\n      });\n    });\n    return newCatOby;\n  };\n\n  const formatCat = cat => {\n    cat = cat.replace(\" \", \"_\");\n    cat = cat.replace(\"&\", \"and\");\n    return cat;\n  };\n\n  const getCategory = index => {\n    let quizCategorys = [...categories];\n    let newQuizConfig = { ...quizConfig\n    };\n    quizCategorys.forEach(item => {\n      item.active = false;\n    });\n    quizCategorys[index].active = true;\n    setCategories(quizCategorys);\n    console.log(quizCategorys[index].categorie.replace(\"&\", \"and\"));\n    newQuizConfig.categorie = formatCat(quizCategorys[index].categorie);\n    setQuizConfig(newQuizConfig);\n  };\n\n  const getDifficulty = index => {\n    let quizDifficultys = [...difficultys];\n    let newQuizConfig = { ...quizConfig\n    };\n    quizDifficultys.forEach(item => {\n      item.active = false;\n    });\n    quizDifficultys[index].active = true;\n    setDifficulty(quizDifficultys);\n    newQuizConfig.difficulty = quizDifficultys[index].difficulty;\n    setQuizConfig(newQuizConfig);\n  };\n\n  const getQuestionCount = event => {\n    var count = event.currentTarget.value;\n    var min = event.currentTarget.min;\n    var max = event.currentTarget.max;\n    let newQuizConfig = { ...quizConfig\n    };\n\n    if (count >= min && count <= max) {\n      newQuizConfig.count = count;\n    } else {\n      newQuizConfig.count = null;\n    }\n\n    setQuizConfig(newQuizConfig);\n  };\n\n  const getQuizConfig = event => {\n    event.preventDefault();\n\n    if (quizConfig.categorie === null) {\n      alert(\"Bitte Kategorie auswählen\");\n    } else if (quizConfig.difficulty === null) {\n      alert(\"Bitte Schwierigkeit auswählen\");\n    } else if (!quizConfig.count) {\n      alert(\"Bitte (gültige)Fragemenge eingeben\");\n    }\n\n    if (quizConfig.categorie != null & !!quizConfig.count & quizConfig.difficulty != null) {\n      var newApiUrl = \"https://the-trivia-api.com/api/questions?categories=\" + quizConfig.categorie.toLowerCase() + \"&limit=\" + quizConfig.count + \"&difficulty=\" + quizConfig.difficulty.toLowerCase();\n      setQuizState(\"startet\");\n      console.log(newApiUrl);\n      getQuestions(newApiUrl);\n    }\n  };\n\n  const setUserName = event => {\n    localStorage.setItem(\"Username\", event.currentTarget.value);\n  };\n\n  const changeQuizScore = () => {\n    sessionStorage.setItem(\"Score\", parseInt(sessionStorage.getItem(\"Score\")) + 1);\n  };\n\n  const changeQuizState = state => {\n    setQuizState(state);\n  };\n\n  const getQuestions = async url => {\n    const res = await axios.get(url);\n    setQuestions(res.data);\n    setQuestionLoading(false);\n  };\n\n  useEffect(() => {\n    const getCartgories = async () => {\n      const res = await axios.get(catApiurl);\n      setCategories(getCategorieArrayObjext(Object.keys(res.data)));\n      setLoading(false);\n    };\n\n    getCartgories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Wait for Api...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this) : quizState === \"name\" & !questionLoading ? (sessionStorage.clear(), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"takeName\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Erstelle dein Random Quiz Schritt 1 von 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(UserNameQuiz, {\n        setName: setUserName,\n        setState: changeQuizState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)) : quizState === \"config\" ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quizConfig\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Erstelle dein Random Quiz Schritt 2 von 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCategorys, {\n        setCategorie: getCategory,\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(QuestionDifficultys, {\n        setDifficulty: getDifficulty,\n        difficultys: difficultys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCount, {\n        setCount: getQuestionCount,\n        startQuiz: getQuizConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this) : quizState === \"startet\" ? (sessionStorage.setItem(\"Score\", 0), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quizStartet\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Schwierigkeit: \", quizConfig.difficulty, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Kategorie: \", quizConfig.categorie]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(RandomQuizList, {\n        allQuestions: questions,\n        setState: changeQuizState,\n        changeScore: changeQuizScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setQuizState(\"config\"),\n        className: \" button\",\n        children: \"Zur\\xFCck zur Quiz-Konfig\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quizScore\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Auswertung von \", localStorage.getItem(\"Username\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [sessionStorage.getItem(\"Score\"), \" von \", quizConfig.count, \" Fragen richtig\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RandomQuizGenerator, \"fw0iuFPvOjdnjsj8rqagmYgoyIo=\");\n\n_c = RandomQuizGenerator;\nexport default RandomQuizGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomQuizGenerator\");","map":{"version":3,"names":["React","useEffect","useState","QuestionCategorys","QuestionDifficultys","axios","QuestionCount","RandomQuizList","UserNameQuiz","RandomQuizGenerator","catApiurl","allDifficultys","active","difficulty","baseQuizConfig","categorie","count","categories","setCategories","loading","setLoading","difficultys","setDifficulty","quizConfig","setQuizConfig","quizState","setQuizState","questionLoading","setQuestionLoading","questions","setQuestions","getCategorieArrayObjext","cats","newCatOby","forEach","item","push","formatCat","cat","replace","getCategory","index","quizCategorys","newQuizConfig","console","log","getDifficulty","quizDifficultys","getQuestionCount","event","currentTarget","value","min","max","getQuizConfig","preventDefault","alert","newApiUrl","toLowerCase","getQuestions","setUserName","localStorage","setItem","changeQuizScore","sessionStorage","parseInt","getItem","changeQuizState","state","url","res","get","data","getCartgories","Object","keys","clear"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/RandomQuizGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport QuestionCategorys from './QuestionCategorys'\r\nimport QuestionDifficultys from './QuestionDifficultys'\r\nimport axios from \"axios\";\r\nimport QuestionCount from \"./QuestionCount\";\r\nimport RandomQuizList from \"./RandomQuizList\";\r\nimport UserNameQuiz from \"./UserNameQuiz\";\r\n\r\n\r\nconst RandomQuizGenerator = () => {\r\n  const catApiurl = \"https://the-trivia-api.com/api/categories\";\r\n  const allDifficultys = [\r\n    { active: null, difficulty: 'Easy' },\r\n    { active: null, difficulty: 'Medium' },\r\n    { active: null, difficulty: 'Hard' }\r\n  ];\r\n\r\n  const baseQuizConfig = {\r\n    difficulty: null,\r\n    categorie: null,\r\n    count: null\r\n  };\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [difficultys, setDifficulty] = useState(allDifficultys);\r\n  const [quizConfig, setQuizConfig] = useState(baseQuizConfig);\r\n  const [quizState, setQuizState] = useState(\"name\"); \r\n  const [questionLoading, setQuestionLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const getCategorieArrayObjext = (cats) => {\r\n    let newCatOby = [];\r\n\r\n    cats.forEach(item => {\r\n      newCatOby.push({ active: null, categorie: item })\r\n    })\r\n    return newCatOby;\r\n  }\r\n  const formatCat = (cat) => {\r\n   cat = cat.replace(\" \", \"_\");\r\n   cat = cat.replace(\"&\", \"and\");\r\n   \r\n    return cat;\r\n  }\r\n  const getCategory = (index) => {\r\n    let quizCategorys = [...categories];\r\n    let newQuizConfig = { ...quizConfig };\r\n\r\n    quizCategorys.forEach(item => {\r\n      item.active = false;\r\n    })\r\n    quizCategorys[index].active = true;\r\n\r\n    setCategories(quizCategorys);\r\n\r\n    console.log(quizCategorys[index].categorie.replace(\"&\", \"and\"));\r\n\r\n    newQuizConfig.categorie = formatCat(quizCategorys[index].categorie);\r\n    \r\n    setQuizConfig(newQuizConfig);\r\n\r\n  }\r\n  const getDifficulty = (index) => {\r\n    let quizDifficultys = [...difficultys];\r\n    let newQuizConfig = { ...quizConfig };\r\n\r\n    quizDifficultys.forEach(item => {\r\n      item.active = false;\r\n    })\r\n    quizDifficultys[index].active = true;\r\n\r\n    setDifficulty(quizDifficultys);\r\n\r\n    newQuizConfig.difficulty = quizDifficultys[index].difficulty;\r\n    setQuizConfig(newQuizConfig);\r\n\r\n  }\r\n  const getQuestionCount = (event) => {\r\n    var count = event.currentTarget.value;\r\n    var min = event.currentTarget.min;\r\n    var max = event.currentTarget.max;\r\n    let newQuizConfig = { ...quizConfig };\r\n\r\n    if ((count >= min) && (count <= max)) {\r\n      newQuizConfig.count = count;\r\n    } else {\r\n      newQuizConfig.count = null;\r\n    }\r\n    setQuizConfig(newQuizConfig);\r\n  }\r\n\r\n  const getQuizConfig = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (quizConfig.categorie === null) {\r\n      alert(\"Bitte Kategorie auswählen\");\r\n    } else if (quizConfig.difficulty === null) {\r\n      alert(\"Bitte Schwierigkeit auswählen\");\r\n    } else if (!quizConfig.count) {\r\n      alert(\"Bitte (gültige)Fragemenge eingeben\");\r\n    }\r\n\r\n    if (quizConfig.categorie != null & !!quizConfig.count & quizConfig.difficulty != null) {\r\n\r\n      var newApiUrl = \"https://the-trivia-api.com/api/questions?categories=\" +\r\n        quizConfig.categorie.toLowerCase() + \"&limit=\" + quizConfig.count + \"&difficulty=\" + quizConfig.difficulty.toLowerCase();\r\n\r\n      setQuizState(\"startet\");\r\n\r\n      console.log(newApiUrl)\r\n\r\n      getQuestions(newApiUrl)\r\n    }\r\n  }\r\n\r\n  const setUserName = (event) => {\r\n    localStorage.setItem(\"Username\" , event.currentTarget.value)\r\n  }\r\n  \r\n  const changeQuizScore = () => {\r\n      sessionStorage.setItem(\"Score\", parseInt(sessionStorage.getItem(\"Score\")) + 1);\r\n  }\r\n\r\n  const changeQuizState = (state) => {\r\n    setQuizState(state);\r\n  }\r\n\r\n  const getQuestions = async (url) => {\r\n    const res = await axios.get(url);\r\n    setQuestions(res.data);\r\n    setQuestionLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCartgories = async () => {\r\n      const res = await axios.get(catApiurl);\r\n      setCategories(getCategorieArrayObjext(Object.keys(res.data)));\r\n      setLoading(false);\r\n    };\r\n\r\n    getCartgories();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      {loading ? (\r\n        <h4>Wait for Api...</h4>) :\r\n        quizState === \"name\" & !questionLoading ?\r\n          (\r\n            sessionStorage.clear(),\r\n            <section className=\"takeName\">\r\n              <header>\r\n                <h1> Erstelle dein Random Quiz Schritt 1 von 2</h1>\r\n              </header>\r\n              <UserNameQuiz\r\n                setName={setUserName}\r\n                setState= {changeQuizState}\r\n              ></UserNameQuiz>\r\n\r\n            </section>\r\n\r\n          ) : quizState === \"config\" ? (\r\n\r\n            <section className=\"quizConfig\">\r\n              <header>\r\n                <h1> Erstelle dein Random Quiz Schritt 2 von 2</h1>\r\n              </header>\r\n\r\n              <QuestionCategorys\r\n                setCategorie={getCategory}\r\n                categories={categories}\r\n              ></QuestionCategorys>\r\n\r\n              <QuestionDifficultys\r\n                setDifficulty={getDifficulty}\r\n                difficultys={difficultys}\r\n              ></QuestionDifficultys>\r\n\r\n              <QuestionCount\r\n                setCount={getQuestionCount}\r\n                startQuiz={getQuizConfig}\r\n              ></QuestionCount>\r\n            </section>\r\n\r\n          ) : quizState === \"startet\" ? (\r\n\r\n            sessionStorage.setItem(\"Score\", 0),\r\n            \r\n            <section className=\"quizStartet\">\r\n              <header>\r\n                <h1>Quiz</h1>\r\n                <h2>Schwierigkeit: {quizConfig.difficulty} </h2>\r\n                <h2>Kategorie: {quizConfig.categorie}</h2>\r\n              </header>\r\n\r\n              <RandomQuizList\r\n                allQuestions={questions}\r\n                setState = {changeQuizState}\r\n                changeScore = {changeQuizScore}\r\n              ></RandomQuizList>\r\n\r\n              <p onClick={() => setQuizState(\"config\")} className=' button'>Zurück zur Quiz-Konfig</p>\r\n            </section>\r\n\r\n          ) : (\r\n            <section className=\"quizScore\">\r\n              <header>\r\n                <h1>Auswertung von {localStorage.getItem(\"Username\")}</h1>\r\n                <h2>{sessionStorage.getItem(\"Score\")} von {quizConfig.count} Fragen richtig</h2>\r\n              </header>\r\n\r\n            </section>\r\n          )\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default RandomQuizGenerator"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAChC,MAAMC,SAAS,GAAG,2CAAlB;EACA,MAAMC,cAAc,GAAG,CACrB;IAAEC,MAAM,EAAE,IAAV;IAAgBC,UAAU,EAAE;EAA5B,CADqB,EAErB;IAAED,MAAM,EAAE,IAAV;IAAgBC,UAAU,EAAE;EAA5B,CAFqB,EAGrB;IAAED,MAAM,EAAE,IAAV;IAAgBC,UAAU,EAAE;EAA5B,CAHqB,CAAvB;EAMA,MAAMC,cAAc,GAAG;IACrBD,UAAU,EAAE,IADS;IAErBE,SAAS,EAAE,IAFU;IAGrBC,KAAK,EAAE;EAHc,CAAvB;EAMA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACmB,WAAD,EAAcC,aAAd,IAA+BpB,QAAQ,CAACS,cAAD,CAA7C;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAACY,cAAD,CAA5C;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,MAAD,CAA1C;EACA,MAAM,CAACyB,eAAD,EAAkBC,kBAAlB,IAAwC1B,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAM6B,uBAAuB,GAAIC,IAAD,IAAU;IACxC,IAAIC,SAAS,GAAG,EAAhB;IAEAD,IAAI,CAACE,OAAL,CAAaC,IAAI,IAAI;MACnBF,SAAS,CAACG,IAAV,CAAe;QAAExB,MAAM,EAAE,IAAV;QAAgBG,SAAS,EAAEoB;MAA3B,CAAf;IACD,CAFD;IAGA,OAAOF,SAAP;EACD,CAPD;;EAQA,MAAMI,SAAS,GAAIC,GAAD,IAAS;IAC1BA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAN;IACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,KAAjB,CAAN;IAEC,OAAOD,GAAP;EACD,CALD;;EAMA,MAAME,WAAW,GAAIC,KAAD,IAAW;IAC7B,IAAIC,aAAa,GAAG,CAAC,GAAGzB,UAAJ,CAApB;IACA,IAAI0B,aAAa,GAAG,EAAE,GAAGpB;IAAL,CAApB;IAEAmB,aAAa,CAACR,OAAd,CAAsBC,IAAI,IAAI;MAC5BA,IAAI,CAACvB,MAAL,GAAc,KAAd;IACD,CAFD;IAGA8B,aAAa,CAACD,KAAD,CAAb,CAAqB7B,MAArB,GAA8B,IAA9B;IAEAM,aAAa,CAACwB,aAAD,CAAb;IAEAE,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACD,KAAD,CAAb,CAAqB1B,SAArB,CAA+BwB,OAA/B,CAAuC,GAAvC,EAA4C,KAA5C,CAAZ;IAEAI,aAAa,CAAC5B,SAAd,GAA0BsB,SAAS,CAACK,aAAa,CAACD,KAAD,CAAb,CAAqB1B,SAAtB,CAAnC;IAEAS,aAAa,CAACmB,aAAD,CAAb;EAED,CAjBD;;EAkBA,MAAMG,aAAa,GAAIL,KAAD,IAAW;IAC/B,IAAIM,eAAe,GAAG,CAAC,GAAG1B,WAAJ,CAAtB;IACA,IAAIsB,aAAa,GAAG,EAAE,GAAGpB;IAAL,CAApB;IAEAwB,eAAe,CAACb,OAAhB,CAAwBC,IAAI,IAAI;MAC9BA,IAAI,CAACvB,MAAL,GAAc,KAAd;IACD,CAFD;IAGAmC,eAAe,CAACN,KAAD,CAAf,CAAuB7B,MAAvB,GAAgC,IAAhC;IAEAU,aAAa,CAACyB,eAAD,CAAb;IAEAJ,aAAa,CAAC9B,UAAd,GAA2BkC,eAAe,CAACN,KAAD,CAAf,CAAuB5B,UAAlD;IACAW,aAAa,CAACmB,aAAD,CAAb;EAED,CAdD;;EAeA,MAAMK,gBAAgB,GAAIC,KAAD,IAAW;IAClC,IAAIjC,KAAK,GAAGiC,KAAK,CAACC,aAAN,CAAoBC,KAAhC;IACA,IAAIC,GAAG,GAAGH,KAAK,CAACC,aAAN,CAAoBE,GAA9B;IACA,IAAIC,GAAG,GAAGJ,KAAK,CAACC,aAAN,CAAoBG,GAA9B;IACA,IAAIV,aAAa,GAAG,EAAE,GAAGpB;IAAL,CAApB;;IAEA,IAAKP,KAAK,IAAIoC,GAAV,IAAmBpC,KAAK,IAAIqC,GAAhC,EAAsC;MACpCV,aAAa,CAAC3B,KAAd,GAAsBA,KAAtB;IACD,CAFD,MAEO;MACL2B,aAAa,CAAC3B,KAAd,GAAsB,IAAtB;IACD;;IACDQ,aAAa,CAACmB,aAAD,CAAb;EACD,CAZD;;EAcA,MAAMW,aAAa,GAAIL,KAAD,IAAW;IAC/BA,KAAK,CAACM,cAAN;;IAEA,IAAIhC,UAAU,CAACR,SAAX,KAAyB,IAA7B,EAAmC;MACjCyC,KAAK,CAAC,2BAAD,CAAL;IACD,CAFD,MAEO,IAAIjC,UAAU,CAACV,UAAX,KAA0B,IAA9B,EAAoC;MACzC2C,KAAK,CAAC,+BAAD,CAAL;IACD,CAFM,MAEA,IAAI,CAACjC,UAAU,CAACP,KAAhB,EAAuB;MAC5BwC,KAAK,CAAC,oCAAD,CAAL;IACD;;IAED,IAAIjC,UAAU,CAACR,SAAX,IAAwB,IAAxB,GAA+B,CAAC,CAACQ,UAAU,CAACP,KAA5C,GAAoDO,UAAU,CAACV,UAAX,IAAyB,IAAjF,EAAuF;MAErF,IAAI4C,SAAS,GAAG,yDACdlC,UAAU,CAACR,SAAX,CAAqB2C,WAArB,EADc,GACuB,SADvB,GACmCnC,UAAU,CAACP,KAD9C,GACsD,cADtD,GACuEO,UAAU,CAACV,UAAX,CAAsB6C,WAAtB,EADvF;MAGAhC,YAAY,CAAC,SAAD,CAAZ;MAEAkB,OAAO,CAACC,GAAR,CAAYY,SAAZ;MAEAE,YAAY,CAACF,SAAD,CAAZ;IACD;EACF,CAtBD;;EAwBA,MAAMG,WAAW,GAAIX,KAAD,IAAW;IAC7BY,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAkCb,KAAK,CAACC,aAAN,CAAoBC,KAAtD;EACD,CAFD;;EAIA,MAAMY,eAAe,GAAG,MAAM;IAC1BC,cAAc,CAACF,OAAf,CAAuB,OAAvB,EAAgCG,QAAQ,CAACD,cAAc,CAACE,OAAf,CAAuB,OAAvB,CAAD,CAAR,GAA4C,CAA5E;EACH,CAFD;;EAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;IACjC1C,YAAY,CAAC0C,KAAD,CAAZ;EACD,CAFD;;EAIA,MAAMT,YAAY,GAAG,MAAOU,GAAP,IAAe;IAClC,MAAMC,GAAG,GAAG,MAAMjE,KAAK,CAACkE,GAAN,CAAUF,GAAV,CAAlB;IACAvC,YAAY,CAACwC,GAAG,CAACE,IAAL,CAAZ;IACA5C,kBAAkB,CAAC,KAAD,CAAlB;EACD,CAJD;;EAMA3B,SAAS,CAAC,MAAM;IACd,MAAMwE,aAAa,GAAG,YAAY;MAChC,MAAMH,GAAG,GAAG,MAAMjE,KAAK,CAACkE,GAAN,CAAU7D,SAAV,CAAlB;MACAQ,aAAa,CAACa,uBAAuB,CAAC2C,MAAM,CAACC,IAAP,CAAYL,GAAG,CAACE,IAAhB,CAAD,CAAxB,CAAb;MACApD,UAAU,CAAC,KAAD,CAAV;IACD,CAJD;;IAMAqD,aAAa;EACd,CARQ,EAQN,EARM,CAAT;EAUA,oBACE;IAAA,UACGtD,OAAO,gBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADM,GAENM,SAAS,KAAK,MAAd,GAAuB,CAACE,eAAxB,IAEIqC,cAAc,CAACY,KAAf,iBACA;MAAS,SAAS,EAAC,UAAnB;MAAA,wBACE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,YAAD;QACE,OAAO,EAAEhB,WADX;QAEE,QAAQ,EAAGO;MAFb;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,IAcM1C,SAAS,KAAK,QAAd,gBAEF;MAAS,SAAS,EAAC,YAAnB;MAAA,wBACE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,iBAAD;QACE,YAAY,EAAEe,WADhB;QAEE,UAAU,EAAEvB;MAFd;QAAA;QAAA;QAAA;MAAA,QALF,eAUE,QAAC,mBAAD;QACE,aAAa,EAAE6B,aADjB;QAEE,WAAW,EAAEzB;MAFf;QAAA;QAAA;QAAA;MAAA,QAVF,eAeE,QAAC,aAAD;QACE,QAAQ,EAAE2B,gBADZ;QAEE,SAAS,EAAEM;MAFb;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFE,GAuBA7B,SAAS,KAAK,SAAd,IAEFuC,cAAc,CAACF,OAAf,CAAuB,OAAvB,EAAgC,CAAhC,gBAEA;MAAS,SAAS,EAAC,aAAnB;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,8BAAoBvC,UAAU,CAACV,UAA/B;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,0BAAgBU,UAAU,CAACR,SAA3B;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,cAAD;QACE,YAAY,EAAEc,SADhB;QAEE,QAAQ,EAAIsC,eAFd;QAGE,WAAW,EAAIJ;MAHjB;QAAA;QAAA;QAAA;MAAA,QAPF,eAaE;QAAG,OAAO,EAAE,MAAMrC,YAAY,CAAC,QAAD,CAA9B;QAA0C,SAAS,EAAC,SAApD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJE,iBAqBF;MAAS,SAAS,EAAC,WAAnB;MAAA,uBACE;QAAA,wBACE;UAAA,8BAAoBmC,YAAY,CAACK,OAAb,CAAqB,UAArB,CAApB;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,WAAKF,cAAc,CAACE,OAAf,CAAuB,OAAvB,CAAL,WAA2C3C,UAAU,CAACP,KAAtD;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EA7DR;IAAA;IAAA;IAAA;EAAA,QADF;AAyED,CAhND;;GAAMP,mB;;KAAAA,mB;AAkNN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}