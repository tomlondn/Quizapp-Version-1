{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React-Projekte\\\\quizapp\\\\src\\\\components\\\\RandomQuizList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomQuizList = _ref => {\n  _s();\n\n  let {\n    allQuestions,\n    setState,\n    changeScore,\n    isMillionär\n  } = _ref;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  console.log(allQuestions[0]);\n\n  const checkAnswer = event => {\n    var answerPossibilities = document.getElementsByClassName(event.currentTarget.className);\n\n    for (var answerPossibilitie of answerPossibilities) {\n      if (answerPossibilitie.getAttribute(\"correct\") === \"yes\") {\n        var correctAnswer = answerPossibilitie;\n      }\n    }\n\n    if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\n      event.currentTarget.style.backgroundColor = \"green\";\n      event.currentTarget.style.color = \"white\";\n      changeScore();\n    } else {\n      correctAnswer.className = correctAnswer.className + \"blinking\";\n      event.currentTarget.style.backgroundColor = \"red\";\n      event.currentTarget.style.color = \"white\";\n    }\n\n    setTimeout(nextQuestion, 2000);\n  };\n\n  const nextQuestion = () => {\n    if (currentQuestion === allQuestions.length - 1) {\n      setState(\"score\");\n    } else {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n\n  if (isMillionär === false) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quizList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"actualQuestionPosition\",\n          children: currentQuestion < allQuestions[0].length * 3 ? currentQuestion + 1 : currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this), \" of \", allQuestions.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), allQuestions.forEach(item => {\n        item.data.map((question, index) => {\n          if (index === currentQuestion) {\n            return /*#__PURE__*/_jsxDEV(Question, {\n              questionIndex: index,\n              questionName: question.question,\n              correctAnswer: question.correctAnswer,\n              incorrectAnswers: question.incorrectAnswers,\n              checkAnswer: checkAnswer,\n              changeQuestion: nextQuestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this);\n          } else {\n            return '';\n          }\n        });\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quizList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"actualQuestionPosition\",\n          children: currentQuestion < allQuestions.length ? currentQuestion + 1 : currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 31\n        }, this), \" of \", allQuestions.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), allQuestions.map((item, index) => {\n        if (index === currentQuestion) {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            questionIndex: index,\n            questionName: item.question,\n            correctAnswer: item.correctAnswer,\n            incorrectAnswers: item.incorrectAnswers,\n            checkAnswer: checkAnswer,\n            changeQuestion: nextQuestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this);\n        } else {\n          return '';\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(RandomQuizList, \"9OM438k1WhEIHDwFF7YsuyU6VEk=\");\n\n_c = RandomQuizList;\nexport default RandomQuizList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomQuizList\");","map":{"version":3,"names":["React","useState","Question","RandomQuizList","allQuestions","setState","changeScore","isMillionär","currentQuestion","setCurrentQuestion","console","log","checkAnswer","event","answerPossibilities","document","getElementsByClassName","currentTarget","className","answerPossibilitie","getAttribute","correctAnswer","style","backgroundColor","color","setTimeout","nextQuestion","length","forEach","item","data","map","question","index","incorrectAnswers"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/RandomQuizList.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Question from './Question'\r\n\r\n\r\nconst RandomQuizList = ({ allQuestions, setState, changeScore, isMillionär }) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    console.log(allQuestions[0]);\r\n\r\n    const checkAnswer = (event) => {\r\n        var answerPossibilities = document.getElementsByClassName(event.currentTarget.className);\r\n\r\n        for (var answerPossibilitie of answerPossibilities) {\r\n            if (answerPossibilitie.getAttribute(\"correct\") === \"yes\") {\r\n                var correctAnswer = answerPossibilitie;\r\n            }\r\n        }\r\n\r\n        if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\r\n\r\n            event.currentTarget.style.backgroundColor = \"green\";\r\n            event.currentTarget.style.color = \"white\";\r\n\r\n            changeScore();\r\n\r\n        } else {\r\n            correctAnswer.className = correctAnswer.className + \"blinking\"\r\n\r\n            event.currentTarget.style.backgroundColor = \"red\";\r\n            event.currentTarget.style.color = \"white\";\r\n        }\r\n\r\n        setTimeout(nextQuestion, 2000);\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestion === allQuestions.length - 1) {\r\n            setState(\"score\");\r\n        } else {\r\n            setCurrentQuestion(currentQuestion + 1);\r\n        }\r\n    }\r\n\r\n    if (isMillionär === false) {\r\n        return (\r\n            <section className='quizList'>\r\n                <div>Question <span id=\"actualQuestionPosition\">{(currentQuestion < (allQuestions[0].length * 3)) ? currentQuestion + 1 : currentQuestion}</span> of {allQuestions.length} </div>\r\n                {allQuestions.forEach((item) => {\r\n                    item.data.map((question, index) => {\r\n                        if (index === currentQuestion) {\r\n                        return (\r\n                            <Question\r\n                                key={index}\r\n                                questionIndex={index}\r\n                                questionName={question.question}\r\n                                correctAnswer={question.correctAnswer}\r\n                                incorrectAnswers={question.incorrectAnswers}\r\n                                checkAnswer={checkAnswer}\r\n                                changeQuestion={nextQuestion}\r\n                            ></Question>\r\n                        )\r\n                    } else {\r\n                        return ('');\r\n                    }\r\n\r\n                    })})}\r\n            </section>\r\n        )\r\n    } else {\r\n        return (\r\n            <section className='quizList'>\r\n                <div>Question <span id=\"actualQuestionPosition\">{(currentQuestion < allQuestions.length) ? currentQuestion + 1 : currentQuestion}</span> of {allQuestions.length} </div>\r\n                {allQuestions.map((item, index) => {\r\n                    if (index === currentQuestion) {\r\n                        return (\r\n                            <Question\r\n                                key={index}\r\n                                questionIndex={index}\r\n                                questionName={item.question}\r\n                                correctAnswer={item.correctAnswer}\r\n                                incorrectAnswers={item.incorrectAnswers}\r\n                                checkAnswer={checkAnswer}\r\n                                changeQuestion={nextQuestion}\r\n                            ></Question>\r\n                        )\r\n                    } else {\r\n                        return ('');\r\n                    }\r\n                })}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default RandomQuizList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}