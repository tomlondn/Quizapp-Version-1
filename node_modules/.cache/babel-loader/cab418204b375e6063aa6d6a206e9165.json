{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React-Projekte\\\\quizapp\\\\src\\\\components\\\\Million\\xE4rQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport UserNameQuiz from './UserNameQuiz';\nimport RandomQuizList from './RandomQuizList';\nimport axios from \"axios\";\nimport QuizScore from \"./QuizScore\";\nimport MillionärJoker from \"./MillionärJoker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MillionärQuiz = () => {\n  _s();\n\n  const [quizState, setQuizState] = useState(\"name\");\n  const [allQuestions, setQuestions] = useState([]);\n\n  const changeQuizState = state => {\n    setQuizState(state);\n  };\n\n  const setUserName = event => {\n    sessionStorage.setItem(\"UsernameMillionär\", event.currentTarget.value);\n  };\n\n  const getUrl = difficulty => {\n    var url = \"https://the-trivia-api.com/api/questions?difficulty=\" + difficulty + \"&limit=5\";\n    return url;\n  };\n\n  const buildQuizQuestions = async () => {\n    let newQuestionArr = [];\n    const buildQuestions = Promise.all([axios.get(getUrl(\"easy\")), axios.get(getUrl(\"medium\")), axios.get(getUrl(\"hard\"))]);\n    await buildQuestions.then(questions => questions.forEach(item => {\n      item.data.forEach(question => {\n        newQuestionArr.push(question);\n      });\n    })).catch(error => {\n      console.log(error);\n    });\n    setQuestions(newQuestionArr);\n  };\n\n  const checkeNameSetState = event => {\n    event.preventDefault();\n    buildQuizQuestions();\n\n    if (sessionStorage.getItem(\"UsernameMillionär\")) {\n      changeQuizState(\"startet\");\n    } else {\n      alert(\"Bitte einen Namen eingeben!\");\n    }\n  };\n\n  const changeQuizScore = () => {\n    sessionStorage.setItem(\"Score\", parseInt(sessionStorage.getItem(\"Score\")) + 1);\n  };\n\n  const setJoker = (event, version) => {\n    event.preventDefault();\n\n    if (version === \"5050\") {\n      var countToDisable = 2;\n      var answerPossibilities = document.getElementsByClassName(\"answerPossibilitie\");\n\n      for (var answerPossibilitie of answerPossibilities) {\n        console.log(countToDisable);\n\n        if (answerPossibilitie.getAttribute(\"correct\") === \"no\" && countToDisable > 0) {\n          answerPossibilitie.className = answerPossibilitie.className + \" disable\";\n          countToDisable--;\n        }\n      }\n\n      console.log(event.currentTarget.style.display);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"million\\xE4rQuiz\",\n    children: quizState === \"name\" ? (sessionStorage.clear(), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Starte dein Quiz nach \\\"Wer Wird Million\\xE4r\\\" Art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"15 Fragen - 5 Leichte - 5 Mittlere - 5 Schwere\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 62\n        }, this), \"Ein Fehler und das Quiz ist vorbei - 2 50/50 Joker\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UserNameQuiz, {\n        setName: setUserName,\n        setStateCheckName: checkeNameSetState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)) : quizState === \"startet\" ? (sessionStorage.setItem(\"Score\", 0), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quizStarted\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(RandomQuizList, {\n        isMillionär: true,\n        allQuestions: allQuestions,\n        setState: changeQuizState,\n        changeScore: changeQuizScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joker\",\n        children: /*#__PURE__*/_jsxDEV(MillionärJoker, {\n          version: \"5050\",\n          setJoker: setJoker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(QuizScore, {\n      isMillionär: true,\n      setQuizState: setQuizState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MillionärQuiz, \"yrmPWz46yz3b/iBY3QGFkPDV2lc=\");\n\n_c = MillionärQuiz;\nexport default MillionärQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Million\\xE4rQuiz\");","map":{"version":3,"names":["React","useState","UserNameQuiz","RandomQuizList","axios","QuizScore","MillionärJoker","MillionärQuiz","quizState","setQuizState","allQuestions","setQuestions","changeQuizState","state","setUserName","event","sessionStorage","setItem","currentTarget","value","getUrl","difficulty","url","buildQuizQuestions","newQuestionArr","buildQuestions","Promise","all","get","then","questions","forEach","item","data","question","push","catch","error","console","log","checkeNameSetState","preventDefault","getItem","alert","changeQuizScore","parseInt","setJoker","version","countToDisable","answerPossibilities","document","getElementsByClassName","answerPossibilitie","getAttribute","className","style","display","clear"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/MillionärQuiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserNameQuiz from './UserNameQuiz';\r\nimport RandomQuizList from './RandomQuizList';\r\nimport axios from \"axios\";\r\nimport QuizScore from \"./QuizScore\";\r\nimport MillionärJoker from \"./MillionärJoker\";\r\n\r\nconst MillionärQuiz = () => {\r\n  const [quizState, setQuizState] = useState(\"name\");\r\n  const [allQuestions, setQuestions] = useState([]);\r\n\r\n  const changeQuizState = (state) => {\r\n    setQuizState(state);\r\n  }\r\n\r\n  const setUserName = (event) => {\r\n    sessionStorage.setItem(\"UsernameMillionär\", event.currentTarget.value)\r\n  }\r\n\r\n  const getUrl = (difficulty) => {\r\n    var url = \"https://the-trivia-api.com/api/questions?difficulty=\" + difficulty + \"&limit=5\";\r\n    return url\r\n  }\r\n\r\n  const buildQuizQuestions = async () => {\r\n    let newQuestionArr = [];\r\n    const buildQuestions = Promise.all([axios.get(getUrl(\"easy\")), axios.get(getUrl(\"medium\")), axios.get(getUrl(\"hard\"))]);\r\n\r\n    await buildQuestions\r\n      .then((questions) => questions.forEach(item => {\r\n        item.data.forEach(question => {\r\n          newQuestionArr.push(question);\r\n        });\r\n      }))\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    setQuestions(newQuestionArr);\r\n  }\r\n\r\n  const checkeNameSetState = (event) => {\r\n    event.preventDefault();\r\n    buildQuizQuestions();\r\n\r\n    if (sessionStorage.getItem(\"UsernameMillionär\")) {\r\n      changeQuizState(\"startet\");\r\n\r\n    } else {\r\n      alert(\"Bitte einen Namen eingeben!\");\r\n    }\r\n  }\r\n\r\n  const changeQuizScore = () => {\r\n    sessionStorage.setItem(\"Score\", parseInt(sessionStorage.getItem(\"Score\")) + 1);\r\n  }\r\n\r\n  const setJoker = (event, version) => {\r\n     event.preventDefault();\r\n\r\n    if(version === \"5050\") {\r\n      var countToDisable = 2;\r\n      var answerPossibilities = document.getElementsByClassName(\"answerPossibilitie\");\r\n\r\n      for (var answerPossibilitie of answerPossibilities) {\r\n        console.log(countToDisable);\r\n        if (answerPossibilitie.getAttribute(\"correct\") === \"no\" && countToDisable > 0) {\r\n          answerPossibilitie.className=answerPossibilitie.className + \" disable\";\r\n          countToDisable--;\r\n        }\r\n      }\r\n     console.log(event.currentTarget.style.display);\r\n    } \r\n  }\r\n\r\n  return (\r\n    <section className=\"millionärQuiz\">\r\n\r\n      {quizState === \"name\" ?\r\n        (\r\n          sessionStorage.clear(),\r\n          <section>\r\n            <header>\r\n              <h1>Starte dein Quiz nach \"Wer Wird Millionär\" Art</h1>\r\n            </header>\r\n            <p>15 Fragen - 5 Leichte - 5 Mittlere - 5 Schwere<br />\r\n              Ein Fehler und das Quiz ist vorbei - 2 50/50 Joker\r\n            </p>\r\n\r\n            <UserNameQuiz\r\n              setName={setUserName}\r\n              setStateCheckName={checkeNameSetState}\r\n            ></UserNameQuiz>\r\n          </section>\r\n        ) : quizState === \"startet\" ?\r\n          (\r\n\r\n            sessionStorage.setItem(\"Score\", 0),\r\n            <section className=\"quizStarted\">\r\n              <header>\r\n                <h1>Quiz</h1>\r\n              </header>\r\n\r\n              <RandomQuizList\r\n                isMillionär={true}\r\n                allQuestions={allQuestions}\r\n                setState={changeQuizState}\r\n                changeScore={changeQuizScore}\r\n              ></RandomQuizList>\r\n              \r\n              <div className=\"joker\">\r\n                <MillionärJoker\r\n                version=\"5050\"\r\n                setJoker={setJoker}\r\n                ></MillionärJoker>\r\n              </div>\r\n\r\n            </section>\r\n\r\n          ) : (\r\n            <QuizScore\r\n            isMillionär={true}\r\n            setQuizState={setQuizState}\r\n            ></QuizScore>\r\n          )\r\n      }\r\n    </section>\r\n  )\r\n}\r\nexport default MillionärQuiz"],"mappings":"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"},"metadata":{},"sourceType":"module"}