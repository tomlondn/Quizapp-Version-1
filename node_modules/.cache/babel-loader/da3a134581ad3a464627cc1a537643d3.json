{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React\\xDCbung\\\\quizapp\\\\src\\\\components\\\\RandomQuizList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomQuizList = _ref => {\n  _s();\n\n  let {\n    allQuestions\n  } = _ref;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const checkAnswer = event => {\n    console.log(currentQuestion);\n\n    if (currentQuestion < allQuestions.length) {\n      // document.getElementById(\"actualQuestionPosition\").innerHTML = parseInt(questionPosition) + 1;\n      setCurrentQuestion(currentQuestion + 1);\n    }\n\n    if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\n      event.currentTarget.style.backgroundColor = \"green\";\n      event.currentTarget.style.color = \"white\";\n    } else {\n      event.currentTarget.style.backgroundColor = \"red\";\n      event.currentTarget.style.color = \"white\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"quizList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"actualQuestionPosition\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }, this), \" of \", allQuestions.length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), allQuestions.map((item, index) => {\n      if (index === parseInt(document.getElementById(\"actualQuestionPosition\").innerHTML) - 1) {\n        return /*#__PURE__*/_jsxDEV(Question, {\n          questionName: allQuestions[0].question,\n          correctAnswer: allQuestions[0].correctAnswer,\n          incorrectAnswers: allQuestions[0].incorrectAnswers,\n          checkAnswer: checkAnswer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RandomQuizList, \"9OM438k1WhEIHDwFF7YsuyU6VEk=\");\n\n_c = RandomQuizList;\nexport default RandomQuizList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomQuizList\");","map":{"version":3,"names":["React","Question","useState","RandomQuizList","allQuestions","currentQuestion","setCurrentQuestion","checkAnswer","event","console","log","length","currentTarget","getAttribute","style","backgroundColor","color","map","item","index","parseInt","document","getElementById","innerHTML","question","correctAnswer","incorrectAnswers"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/ReactÜbung/quizapp/src/components/RandomQuizList.js"],"sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\nimport { useState } from 'react'\r\n\r\nconst RandomQuizList = ({ allQuestions }) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n\r\n    const checkAnswer = (event) => {\r\n        console.log(currentQuestion);\r\n        if (currentQuestion < allQuestions.length) {\r\n            // document.getElementById(\"actualQuestionPosition\").innerHTML = parseInt(questionPosition) + 1;\r\n            setCurrentQuestion(currentQuestion + 1)\r\n        }\r\n        if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\r\n            event.currentTarget.style.backgroundColor = \"green\";\r\n            event.currentTarget.style.color = \"white\";\r\n        } else {\r\n            event.currentTarget.style.backgroundColor = \"red\";\r\n            event.currentTarget.style.color = \"white\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className='quizList'>\r\n            <div>Question <span id=\"actualQuestionPosition\">1</span> of {allQuestions.length} </div>\r\n            {allQuestions.map((item, index) => {\r\n                if (index === parseInt(document.getElementById(\"actualQuestionPosition\").innerHTML) - 1) {\r\n                    return (\r\n                        <Question\r\n                            key={index}\r\n                            questionName={allQuestions[0].question}\r\n                            correctAnswer={allQuestions[0].correctAnswer}\r\n                            incorrectAnswers={allQuestions[0].incorrectAnswers}\r\n                            checkAnswer={checkAnswer}\r\n                        ></Question>\r\n                    )\r\n                }\r\n            })}\r\n        </section>\r\n    )\r\n}\r\nexport default RandomQuizList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACzC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,CAAD,CAAtD;;EAEA,MAAMK,WAAW,GAAIC,KAAD,IAAW;IAC3BC,OAAO,CAACC,GAAR,CAAYL,eAAZ;;IACA,IAAIA,eAAe,GAAGD,YAAY,CAACO,MAAnC,EAA2C;MACvC;MACAL,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;IACH;;IACD,IAAIG,KAAK,CAACI,aAAN,CAAoBC,YAApB,CAAiC,SAAjC,MAAgD,KAApD,EAA2D;MACvDL,KAAK,CAACI,aAAN,CAAoBE,KAApB,CAA0BC,eAA1B,GAA4C,OAA5C;MACAP,KAAK,CAACI,aAAN,CAAoBE,KAApB,CAA0BE,KAA1B,GAAkC,OAAlC;IACH,CAHD,MAGO;MACHR,KAAK,CAACI,aAAN,CAAoBE,KAApB,CAA0BC,eAA1B,GAA4C,KAA5C;MACAP,KAAK,CAACI,aAAN,CAAoBE,KAApB,CAA0BE,KAA1B,GAAkC,OAAlC;IACH;EACJ,CAbD;;EAeA,oBACI;IAAS,SAAS,EAAC,UAAnB;IAAA,wBACI;MAAA,qCAAc;QAAM,EAAE,EAAC,wBAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAd,UAA6DZ,YAAY,CAACO,MAA1E;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKP,YAAY,CAACa,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC/B,IAAIA,KAAK,KAAKC,QAAQ,CAACC,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,EAAkDC,SAAnD,CAAR,GAAwE,CAAtF,EAAyF;QACrF,oBACI,QAAC,QAAD;UAEI,YAAY,EAAEnB,YAAY,CAAC,CAAD,CAAZ,CAAgBoB,QAFlC;UAGI,aAAa,EAAEpB,YAAY,CAAC,CAAD,CAAZ,CAAgBqB,aAHnC;UAII,gBAAgB,EAAErB,YAAY,CAAC,CAAD,CAAZ,CAAgBsB,gBAJtC;UAKI,WAAW,EAAEnB;QALjB,GACSY,KADT;UAAA;UAAA;UAAA;QAAA,QADJ;MASH;IACJ,CAZA,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CApCD;;GAAMhB,c;;KAAAA,c;AAqCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}