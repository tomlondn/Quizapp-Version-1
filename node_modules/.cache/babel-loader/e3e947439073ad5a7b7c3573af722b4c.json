{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React\\xDCbung\\\\quizapp\\\\src\\\\components\\\\RandomQuizGenerator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Question from './Question';\nimport QuestionCategorys from './QuestionCategorys';\nimport QuestionDifficultys from './QuestionDifficultys';\nimport axios from \"axios\";\nimport QuestionCount from \"./QuestionCount\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomQuizGenerator = () => {\n  _s();\n\n  const apiurl = \"https://the-trivia-api.com/api/categories\";\n  const allDifficultys = [{\n    active: null,\n    difficulty: 'Easy'\n  }, {\n    active: null,\n    difficulty: 'Medium'\n  }, {\n    active: null,\n    difficulty: 'Hard'\n  }];\n  const quizConfig = [];\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [difficultys, setDifficulty] = useState(allDifficultys);\n\n  const getQuizConfig = () => {\n    let quizConfig = [];\n    quizConfig.push({\n      difficulty: localStorage.getItem(\"quizDifficulty\")\n    });\n    quizConfig.push({\n      categorie: localStorage.getItem(\"quizCategory\")\n    });\n    quizConfig.push({\n      categorie: localStorage.getItem(\"quizQuestionCount\")\n    });\n    console.log(quizConfig);\n  };\n\n  const getCategorieArrayObjext = cats => {\n    let newCatOby = [];\n    cats.map(item => {\n      newCatOby.push({\n        active: null,\n        categorie: item\n      });\n    });\n    return newCatOby;\n  };\n\n  const getCategory = index => {\n    let quizCategorys = [...categories];\n    quizCategorys.forEach(item => {\n      item.active = false;\n    });\n    quizCategorys[index].active = true;\n    setCategories(quizCategorys);\n    localStorage.setItem('quizCategory', quizCategorys[index].categorie);\n  };\n\n  const getDifficulty = index => {\n    let quizDifficultys = [...difficultys];\n    quizDifficultys.forEach(item => {\n      item.active = false;\n    });\n    quizDifficultys[index].active = true;\n    setDifficulty(quizDifficultys);\n    quizConfig.push({\n      'difficulty': allDifficultys[index].difficulty\n    });\n  };\n\n  const getQuestionCount = event => {\n    var count = event.currentTarget.value;\n\n    if (event.key === \"Enter\") {\n      console.log(event);\n      quizConfig.push({\n        'count': count\n      });\n      getQuizConfig();\n    }\n  };\n\n  const getCaregories = async () => {\n    const res = await axios.get(apiurl);\n    setCategories(getCategorieArrayObjext(Object.keys(res.data)));\n    setLoading(false);\n  };\n\n  const getQuestions = async () => {\n    const res = await axios.get(\"https://the-trivia-api.com/api/questions?limit=50\");\n    console.log(res);\n  }; // window.onload(() => {localStorage.clear()});\n\n\n  useEffect(() => {\n    getQuestions();\n    getCaregories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fragebogen-Erstellen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Wait for Api...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(QuestionCategorys, {\n        setCategorie: getCategory,\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QuestionDifficultys, {\n        setDifficulty: getDifficulty,\n        difficultys: difficultys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCount, {\n        setCount: getQuestionCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RandomQuizGenerator, \"7Swe6T4xxLb+G+Qor8RNaKqKPT4=\");\n\n_c = RandomQuizGenerator;\nexport default RandomQuizGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomQuizGenerator\");","map":{"version":3,"names":["React","useEffect","useState","Question","QuestionCategorys","QuestionDifficultys","axios","QuestionCount","RandomQuizGenerator","apiurl","allDifficultys","active","difficulty","quizConfig","categories","setCategories","loading","setLoading","difficultys","setDifficulty","getQuizConfig","push","localStorage","getItem","categorie","console","log","getCategorieArrayObjext","cats","newCatOby","map","item","getCategory","index","quizCategorys","forEach","setItem","getDifficulty","quizDifficultys","getQuestionCount","event","count","currentTarget","value","key","getCaregories","res","get","Object","keys","data","getQuestions"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/ReactÜbung/quizapp/src/components/RandomQuizGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Question from './Question'\r\nimport QuestionCategorys from './QuestionCategorys'\r\nimport QuestionDifficultys from './QuestionDifficultys'\r\nimport axios from \"axios\";\r\nimport QuestionCount  from \"./QuestionCount\";\r\n\r\n\r\nconst RandomQuizGenerator = () => {\r\n  const apiurl = \"https://the-trivia-api.com/api/categories\";\r\n  const allDifficultys = [\r\n    { active : null, difficulty : 'Easy'},\r\n    { active : null, difficulty : 'Medium'},\r\n    { active : null, difficulty : 'Hard'}\r\n  ];\r\n  const quizConfig = [];\r\n  \r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [difficultys, setDifficulty] = useState(allDifficultys);\r\n\r\n  const getQuizConfig = () => {\r\n    let quizConfig = [];\r\n    quizConfig.push({ difficulty: localStorage.getItem(\"quizDifficulty\") });\r\n    quizConfig.push({ categorie: localStorage.getItem(\"quizCategory\") });\r\n    quizConfig.push({ categorie: localStorage.getItem(\"quizQuestionCount\") });\r\n\r\n    console.log(quizConfig);\r\n  }\r\n  const getCategorieArrayObjext = (cats) => {\r\n    let newCatOby = [];\r\n\r\n    cats.map(item => {\r\n      newCatOby.push({active : null, categorie : item})\r\n    })\r\n    return newCatOby;\r\n  } \r\n\r\n  const getCategory = (index) => {\r\n    let quizCategorys = [...categories]\r\n\r\n    quizCategorys.forEach(item => {\r\n      item.active = false;\r\n    })\r\n    quizCategorys[index].active = true;\r\n\r\n    setCategories(quizCategorys);\r\n\r\n    localStorage.setItem('quizCategory', quizCategorys[index].categorie)\r\n  }\r\n  const getDifficulty = (index) => {\r\n    let quizDifficultys = [...difficultys];\r\n    quizDifficultys.forEach(item => {\r\n      item.active = false;\r\n    })\r\n    quizDifficultys[index].active = true;\r\n\r\n    setDifficulty(quizDifficultys);\r\n\r\n    quizConfig.push({'difficulty' :  allDifficultys[index].difficulty})\r\n\r\n  }\r\n  const getQuestionCount = (event) =>{\r\n    var count = event.currentTarget.value;\r\n\r\n    if(event.key === \"Enter\"){\r\n      console.log(event);\r\n\r\n      quizConfig.push({'count' :  count})\r\n      \r\n      getQuizConfig();\r\n    }\r\n  }\r\n\r\n  const getCaregories = async () => {\r\n    const res = await axios.get(apiurl);\r\n    setCategories(getCategorieArrayObjext(Object.keys(res.data)));\r\n    setLoading(false);\r\n  };\r\n\r\n  const getQuestions = async () => {\r\n    const res = await axios.get(\"https://the-trivia-api.com/api/questions?limit=50\");\r\n    console.log(res);\r\n  };\r\n\r\n  // window.onload(() => {localStorage.clear()});\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n    getCaregories();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <header>\r\n        <h1>Fragebogen-Erstellen</h1>\r\n      </header>\r\n      {loading ? (\r\n        <h4>Wait for Api...</h4>) :\r\n        (\r\n          <React.Fragment>\r\n            <QuestionCategorys\r\n              setCategorie={getCategory}\r\n              categories={categories}\r\n            ></QuestionCategorys>\r\n\r\n            <QuestionDifficultys\r\n              setDifficulty={getDifficulty}\r\n              difficultys={difficultys}\r\n            ></QuestionDifficultys>\r\n\r\n          <QuestionCount\r\n          setCount = {getQuestionCount}\r\n          ></QuestionCount>\r\n\r\n          </React.Fragment>\r\n\r\n        )\r\n      }\r\n\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\nexport default RandomQuizGenerator"],"mappings":"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"},"metadata":{},"sourceType":"module"}