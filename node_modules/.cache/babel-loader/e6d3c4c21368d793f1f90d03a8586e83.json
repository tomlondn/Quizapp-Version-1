{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React\\xDCbung\\\\quizapp\\\\src\\\\components\\\\RandomQuizList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomQuizList = _ref => {\n  _s();\n\n  let {\n    allQuestions\n  } = _ref;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const checkAnswer = event => {\n    console.log();\n\n    if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\n      event.currentTarget.style.backgroundColor = \"green\";\n      event.currentTarget.style.color = \"white\";\n    } else {\n      event.currentTarget.style.backgroundColor = \"red\";\n      event.currentTarget.style.color = \"white\";\n    }\n\n    if (currentQuestion < allQuestions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n\n    if (currentQuestion === allQuestions.length) {\n      alert(\"Fertig!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"quizList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"actualQuestionPosition\",\n        children: currentQuestion < allQuestions.length ? currentQuestion + 1 : currentQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }, this), \" of \", allQuestions.length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), allQuestions.map((item, index) => {\n      if (index === currentQuestion) {\n        return /*#__PURE__*/_jsxDEV(Question, {\n          questionIndex: index,\n          questionName: item.question,\n          correctAnswer: item.correctAnswer,\n          incorrectAnswers: item.incorrectAnswers,\n          checkAnswer: checkAnswer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RandomQuizList, \"9OM438k1WhEIHDwFF7YsuyU6VEk=\");\n\n_c = RandomQuizList;\nexport default RandomQuizList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomQuizList\");","map":{"version":3,"names":["React","Question","useState","RandomQuizList","allQuestions","currentQuestion","setCurrentQuestion","checkAnswer","event","console","log","currentTarget","getAttribute","style","backgroundColor","color","length","alert","map","item","index","question","correctAnswer","incorrectAnswers"],"sources":["D:/Dokumente/Programmierübungen/Übung JS/ReactÜbung/quizapp/src/components/RandomQuizList.js"],"sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\nimport { useState } from 'react'\r\n\r\nconst RandomQuizList = ({ allQuestions }) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n\r\n    const checkAnswer = (event) => {\r\n     console.log();\r\n\r\n        if (event.currentTarget.getAttribute(\"correct\") === \"yes\") {\r\n            event.currentTarget.style.backgroundColor = \"green\";\r\n            event.currentTarget.style.color = \"white\";\r\n        } else {\r\n            event.currentTarget.style.backgroundColor = \"red\";\r\n            event.currentTarget.style.color = \"white\";\r\n        }\r\n        if (currentQuestion < allQuestions.length) {\r\n            setCurrentQuestion(currentQuestion + 1);\r\n        }\r\n        if (currentQuestion === allQuestions.length) {\r\n            alert(\"Fertig!\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className='quizList'>\r\n            <div>Question <span id=\"actualQuestionPosition\">{(currentQuestion < allQuestions.length) ? currentQuestion + 1 : currentQuestion}</span> of {allQuestions.length} </div>\r\n            {allQuestions.map((item, index) => {\r\n                if (index === currentQuestion) {\r\n                    return (\r\n                        <Question\r\n                            key={index}\r\n                            questionIndex={index}\r\n                            questionName={item.question}\r\n                            correctAnswer={item.correctAnswer}\r\n                            incorrectAnswers={item.incorrectAnswers}\r\n                            checkAnswer={checkAnswer}\r\n                        ></Question>\r\n                    )\r\n                }\r\n            })}\r\n        </section>\r\n    )\r\n}\r\nexport default RandomQuizList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACzC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,CAAD,CAAtD;;EAGA,MAAMK,WAAW,GAAIC,KAAD,IAAW;IAC9BC,OAAO,CAACC,GAAR;;IAEG,IAAIF,KAAK,CAACG,aAAN,CAAoBC,YAApB,CAAiC,SAAjC,MAAgD,KAApD,EAA2D;MACvDJ,KAAK,CAACG,aAAN,CAAoBE,KAApB,CAA0BC,eAA1B,GAA4C,OAA5C;MACAN,KAAK,CAACG,aAAN,CAAoBE,KAApB,CAA0BE,KAA1B,GAAkC,OAAlC;IACH,CAHD,MAGO;MACHP,KAAK,CAACG,aAAN,CAAoBE,KAApB,CAA0BC,eAA1B,GAA4C,KAA5C;MACAN,KAAK,CAACG,aAAN,CAAoBE,KAApB,CAA0BE,KAA1B,GAAkC,OAAlC;IACH;;IACD,IAAIV,eAAe,GAAGD,YAAY,CAACY,MAAnC,EAA2C;MACvCV,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;IACH;;IACD,IAAIA,eAAe,KAAKD,YAAY,CAACY,MAArC,EAA6C;MACzCC,KAAK,CAAC,SAAD,CAAL;IACH;EACJ,CAhBD;;EAkBA,oBACI;IAAS,SAAS,EAAC,UAAnB;IAAA,wBACI;MAAA,qCAAc;QAAM,EAAE,EAAC,wBAAT;QAAA,UAAoCZ,eAAe,GAAGD,YAAY,CAACY,MAAhC,GAA0CX,eAAe,GAAG,CAA5D,GAAgEA;MAAnG;QAAA;QAAA;QAAA;MAAA,QAAd,UAA6ID,YAAY,CAACY,MAA1J;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKZ,YAAY,CAACc,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC/B,IAAIA,KAAK,KAAKf,eAAd,EAA+B;QAC3B,oBACI,QAAC,QAAD;UAEI,aAAa,EAAEe,KAFnB;UAGI,YAAY,EAAED,IAAI,CAACE,QAHvB;UAII,aAAa,EAAEF,IAAI,CAACG,aAJxB;UAKI,gBAAgB,EAAEH,IAAI,CAACI,gBAL3B;UAMI,WAAW,EAAEhB;QANjB,GACSa,KADT;UAAA;UAAA;UAAA;QAAA,QADJ;MAUH;IACJ,CAbA,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CAzCD;;GAAMjB,c;;KAAAA,c;AA0CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}