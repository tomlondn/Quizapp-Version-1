{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tompi\\\\Documents\\\\Programmier\\xFCbungen\\\\\\xDCbung JS\\\\React-Projekte\\\\quizapp\\\\src\\\\components\\\\CountryQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport InputField from './InputField';\nimport GuessedCountrys from './GuessedCountrys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryQuiz = () => {\n  _s();\n  const apiUrl = \"https://restcountries.com/v3.1/all\";\n  const [quizState, setQuizState] = useState(\"generate\");\n  const [countryToGuess, setCountryToGuess] = useState({});\n  const [guessedCountrys, setGuessedCountrys] = useState([]);\n  const [allCountrys, setCountrys] = useState([]);\n  const [guesses, setGuesses] = useState(5);\n  const callApi = async () => {\n    const res = await axios.get(apiUrl);\n    formatApiCountryData(res.data);\n    console.log(res);\n  };\n  const formatApiCountryData = apiData => {\n    let filteredData = [];\n    apiData.forEach(item => {\n      var _item$capital, _item$continents;\n      filteredData.push({\n        \"name\": item.translations.deu.common,\n        \"population\": item.population,\n        \"capital\": (_item$capital = item.capital) === null || _item$capital === void 0 ? void 0 : _item$capital[0],\n        \"continent\": (_item$continents = item.continents) === null || _item$continents === void 0 ? void 0 : _item$continents[0],\n        \"area\": item.area\n      });\n    });\n    setCountrys(filteredData);\n    var keys = Object.keys(filteredData);\n    setCountryToGuess(filteredData[keys[keys.length * Math.random() << 0]]);\n  };\n  const generateSessionStorage = country => {\n    window.sessionStorage.setItem(\"lastGuessed\", country);\n  };\n  const checkCountry = e => {\n    const searchedCountry = {\n      ...countryToGuess\n    };\n    const alreadyGuessed = [...guessedCountrys];\n    const countrys = [...allCountrys];\n    const remainingGuesses = guesses;\n    const lastGuessed = window.sessionStorage.getItem(\"lastGuessed\");\n    const allCountryNames = countrys.map(value => value.name.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"));\n    const input = e.currentTarget.value.toLowerCase();\n    const countryError = document.getElementById(\"noValidInput\");\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      if (allCountryNames.includes(input) === false) {\n        countryError.innerHTML = \"Bitte eingabe Überprüfen\";\n        countryError.style.color = \"red\";\n      } else if (input.value === searchedCountry.name) {\n        alert(\"Glückwunsch das gesuchte Land war \" + searchedCountry.name);\n      } else {\n        countryError.innerHTML = \"\";\n        countryError.style.color = \"black\";\n        generateSessionStorage(input);\n        if (input !== lastGuessed) {\n          alreadyGuessed.push(countrys.find(item => item.name.toLowerCase() === input));\n          setGuessedCountrys(alreadyGuessed);\n          setGuesses(remainingGuesses - 1);\n        }\n      }\n    }\n  };\n  const startQuiz = e => {\n    e.preventDefault();\n    callApi();\n    setQuizState(\"guess\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"countryQuiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Land in 5 versuchen erraten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), quizState === \"generate\" ? /*#__PURE__*/_jsxDEV(InputField, {\n      action: startQuiz,\n      buttonLabel: \"Generieren\",\n      button: true,\n      input: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }, this) : quizState === \"guess\" ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"guessing\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"noch \", guesses, \" versuche\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"noValidInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        action: checkCountry,\n        inputLabel: \"Land eingeben:\",\n        placeholder: \"Enter drücken zur Tippabgabe\",\n        button: false,\n        input: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(GuessedCountrys, {\n        countrys: guessedCountrys,\n        countryToGuess: countryToGuess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryQuiz, \"YiwKoUB6X0iemE1xojhaevsM3yw=\");\n_c = CountryQuiz;\nexport default CountryQuiz;\nvar _c;\n$RefreshReg$(_c, \"CountryQuiz\");","map":{"version":3,"names":["React","useState","axios","InputField","GuessedCountrys","jsxDEV","_jsxDEV","CountryQuiz","_s","apiUrl","quizState","setQuizState","countryToGuess","setCountryToGuess","guessedCountrys","setGuessedCountrys","allCountrys","setCountrys","guesses","setGuesses","callApi","res","get","formatApiCountryData","data","console","log","apiData","filteredData","forEach","item","_item$capital","_item$continents","push","translations","deu","common","population","capital","continents","area","keys","Object","length","Math","random","generateSessionStorage","country","window","sessionStorage","setItem","checkCountry","e","searchedCountry","alreadyGuessed","countrys","remainingGuesses","lastGuessed","getItem","allCountryNames","map","value","name","toLowerCase","normalize","replace","input","currentTarget","countryError","document","getElementById","key","preventDefault","includes","innerHTML","style","color","alert","find","startQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","buttonLabel","button","id","inputLabel","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/tompi/Documents/Programmierübungen/Übung JS/React-Projekte/quizapp/src/components/CountryQuiz.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport InputField from './InputField';\r\nimport GuessedCountrys from './GuessedCountrys';\r\n\r\nconst CountryQuiz = () => {\r\n    const apiUrl = \"https://restcountries.com/v3.1/all\";\r\n    const [quizState, setQuizState] = useState(\"generate\");\r\n    const [countryToGuess, setCountryToGuess] = useState({});\r\n    const [guessedCountrys, setGuessedCountrys] = useState([]);\r\n    const [allCountrys, setCountrys] = useState([]);\r\n    const [guesses, setGuesses] = useState(5);\r\n\r\n    const callApi = async () => {\r\n        const res = await axios.get(apiUrl);\r\n        formatApiCountryData(res.data);\r\n        console.log(res)\r\n    }\r\n\r\n    const formatApiCountryData = (apiData) => {\r\n        let filteredData = [];\r\n        apiData.forEach((item) => {\r\n            filteredData.push({\r\n                \"name\": item.translations.deu.common,\r\n                \"population\": item.population,\r\n                \"capital\": item.capital?.[0],\r\n                \"continent\": item.continents?.[0],\r\n                \"area\": item.area\r\n            })\r\n        })\r\n\r\n        setCountrys(filteredData);\r\n\r\n        var keys = Object.keys(filteredData);\r\n        setCountryToGuess(filteredData[keys[keys.length * Math.random() << 0]]);\r\n    }\r\n\r\n    const generateSessionStorage = (country) => {\r\n        window.sessionStorage.setItem(\"lastGuessed\", country)\r\n    }\r\n\r\n    const checkCountry = (e) => {\r\n        const searchedCountry = { ...countryToGuess }\r\n        const alreadyGuessed = [...guessedCountrys]\r\n        const countrys = [...allCountrys]\r\n        const remainingGuesses = guesses\r\n        const lastGuessed = window.sessionStorage.getItem(\"lastGuessed\");\r\n        const allCountryNames = countrys.map(value => value.name.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"));\r\n        const input = e.currentTarget.value.toLowerCase();\r\n        const countryError = document.getElementById(\"noValidInput\");\r\n\r\n\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (allCountryNames.includes(input) === false)  {\r\n\r\n                countryError.innerHTML = \"Bitte eingabe Überprüfen\";\r\n                countryError.style.color = \"red\";\r\n\r\n            } else if  (input.value === searchedCountry.name) {\r\n\r\n                alert(\"Glückwunsch das gesuchte Land war \"+searchedCountry.name)\r\n\r\n            } else {\r\n                \r\n                countryError.innerHTML = \"\";\r\n                countryError.style.color = \"black\";\r\n\r\n                generateSessionStorage(input);\r\n\r\n\r\n                if (input !== lastGuessed) {\r\n\r\n                    alreadyGuessed.push(countrys.find(item => item.name.toLowerCase() === input));\r\n                    setGuessedCountrys(alreadyGuessed);\r\n                    setGuesses(remainingGuesses - 1)\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    const startQuiz = (e) => {\r\n        e.preventDefault();\r\n        callApi();\r\n        setQuizState(\"guess\");\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"countryQuiz\">\r\n            <header>\r\n                <h1>Land in 5 versuchen erraten</h1>\r\n            </header>\r\n            {quizState === \"generate\" ?\r\n                (\r\n                    <InputField\r\n                        action={startQuiz}\r\n                        buttonLabel={\"Generieren\"}\r\n                        button={true}\r\n                        input={false}\r\n\r\n                    ></InputField>\r\n                )\r\n\r\n                : quizState === \"guess\" ? (\r\n                    <section className='guessing'>\r\n\r\n                        <header>\r\n                            <h2>noch {guesses} versuche</h2>\r\n                        </header>\r\n\r\n                        <p id='noValidInput'></p>\r\n\r\n                        <InputField\r\n                            action={checkCountry}\r\n                            inputLabel={\"Land eingeben:\"}\r\n                            placeholder={\"Enter drücken zur Tippabgabe\"}\r\n                            button={false}\r\n                            input={true}\r\n                        ></InputField>\r\n\r\n                        <GuessedCountrys\r\n                            countrys={guessedCountrys}\r\n                            countryToGuess = {countryToGuess}\r\n                        ></GuessedCountrys>\r\n                    </section>\r\n                ) : \"\"\r\n            }\r\n\r\n        </section>\r\n    )\r\n}\r\nexport default CountryQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}